{
    "classes": {
        "Plugin.Align": {
            "name": "Plugin.Align",
            "shortname": "Plugin.Align",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "align-plugin",
            "namespace": "",
            "file": "src/node/js/align-plugin.js",
            "line": 11,
            "description": "Node plugin which can be used to align a node with another node,\nregion, or the viewport.",
            "params": [
                {
                    "name": "User",
                    "description": "configuration object",
                    "type": "Object"
                }
            ]
        },
        "Anim": {
            "name": "Anim",
            "shortname": "Anim",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim",
            "submodule": "anim-base",
            "namespace": "",
            "file": "src/anim/js/anim.js",
            "line": 13,
            "description": "A class for constructing animation instances.",
            "is_constructor": 1,
            "extends": "Base"
        },
        "Easing": {
            "name": "Easing",
            "shortname": "Easing",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim",
            "namespace": "",
            "file": "src/anim/js/anim-easing.js",
            "line": 30,
            "description": "The easing module provides methods for customizing\nhow an animation behaves during each run.",
            "submodule": "anim-easing"
        },
        "Plugin.NodeFX": {
            "name": "Plugin.NodeFX",
            "shortname": "Plugin.NodeFX",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "anim",
            "namespace": "",
            "file": "src/anim/js/anim-node-plugin.js",
            "line": 1,
            "description": "Binds an Anim instance to a Node instance",
            "submodule": "anim-node-plugin",
            "extends": "Anim"
        },
        "App.Base": {
            "name": "App.Base",
            "shortname": "App.Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "app",
            "submodule": "app-base",
            "namespace": "",
            "file": "src/app/js/app-base.js",
            "line": 51,
            "description": "Provides a top-level application component which manages navigation and views.\n\nThis gives you a foundation and structure on which to build your application; it\ncombines robust URL navigation with powerful routing and flexible view\nmanagement.",
            "params": [
                {
                    "name": "config",
                    "description": "The following are configuration properties that can be\n    specified _in addition_ to default attribute values and the non-attribute\n    properties provided by `Y.Base`:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "views",
                            "description": "Hash of view-name to metadata used to\n    declaratively describe an application's views and their relationship with\n    the app and other views. The views specified here will override any defaults\n    provided by the `views` object on the `prototype`.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "is_constructor": 1,
            "extends": "Base",
            "uses": [
                "View",
                "Router",
                "PjaxBase"
            ],
            "since": "3.5.0"
        },
        "App": {
            "name": "App",
            "shortname": "App",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "app",
            "submodule": "app-base",
            "namespace": "",
            "file": "src/app/js/app-base.js",
            "line": 1036,
            "description": "Provides a top-level application component which manages navigation and views.\n\nThis gives you a foundation and structure on which to build your application; it\ncombines robust URL navigation with powerful routing and flexible view\nmanagement.\n\n`Y.App` is both a namespace and constructor function. The `Y.App` class is\nspecial in that any `Y.App` class extensions that are included in the YUI\ninstance will be **auto-mixed** on to the `Y.App` class. Consider this example:\n\n    YUI().use('app-base', 'app-transitions', function (Y) {\n        // This will create two YUI Apps, `basicApp` will not have transitions,\n        // but `fancyApp` will have transitions support included and turn it on.\n        var basicApp = new Y.App.Base(),\n            fancyApp = new Y.App({transitions: true});\n    });",
            "params": [
                {
                    "name": "config",
                    "description": "The following are configuration properties that can be\n    specified _in addition_ to default attribute values and the non-attribute\n    properties provided by `Y.Base`:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "views",
                            "description": "Hash of view-name to metadata used to\n    declaratively describe an application's views and their relationship with\n    the app and other views. The views specified here will override any defaults\n    provided by the `views` object on the `prototype`.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "is_constructor": 1,
            "extends": "App.Base",
            "uses": [
                "App.Content",
                "App.Transitions",
                "PjaxContent"
            ],
            "since": "3.5.0"
        },
        "App.Content": {
            "name": "App.Content",
            "shortname": "App.Content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "App",
                "App",
                "App",
                "App",
                "App",
                "App",
                "App",
                "App"
            ],
            "module": "app",
            "submodule": "app-content",
            "namespace": "",
            "file": "src/app/js/app-extensions/app-content.js",
            "line": 11,
            "description": "`Y.App` extension that provides pjax-style content fetching and handling.\n\nThis makes it easy to fetch server rendered content for URLs using Ajax. The\nHTML content returned from the server will be view-ified and set as the app's\nmain content, making it seamless to use a mixture of server and client rendered\nviews.\n\nWhen the `\"app-content\"` module is used, it will automatically mix itself into\n`Y.App`, and it provides three main features:\n\n  - **`Y.App.Content.route`**: A stack of middleware which forms a pjax-style\n    content route.\n\n  - **`loadContent()`**: Route middleware which load content from a server. This\n    makes an Ajax request for the requested URL, parses the returned content and\n    puts it on the route's response object.\n\n  - **`showContent()`**: Method which provides an easy way to view-ify HTML\n    content which should be shown as an app's active/visible view.\n\nThe following is an example of how these features can be used:\n\n    // Creates a new app and registers the `\"post\"` view.\n    var app = new Y.App({\n        views: {\n            post: {type: Y.PostView}\n        }\n    });\n\n    // Uses a simple server rendered content route for the About page.\n    app.route('/about/', Y.App.Content.route);\n\n    // Uses the `loadContent()` middleware to fetch the contents of the post\n    // from the server and shows that content in a `\"post\"` view.\n    app.route('/posts/:id/', 'loadContent', function (req, res, next) {\n        this.showContent(res.content.node, {view: 'post'});\n    });",
            "uses": [
                "PjaxContent"
            ],
            "since": "3.7.0"
        },
        "App.Transitions": {
            "name": "App.Transitions",
            "shortname": "App.Transitions",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "App",
                "App",
                "App",
                "App",
                "App",
                "App",
                "App",
                "App"
            ],
            "module": "app",
            "submodule": "app-transitions",
            "namespace": "",
            "file": "src/app/js/app-extensions/app-transitions.js",
            "line": 10,
            "description": "`Y.App` extension that provides view transitions in browsers which support\nnative CSS3 transitions.\n\nView transitions provide an nice way to move from one \"page\" to the next that is\nboth pleasant to the user and helps to communicate a hierarchy between sections\nof an application.\n\nWhen the `\"app-transitions\"` module is used, it will automatically mix itself\ninto `Y.App` and transition between `activeView` changes using the following\neffects:\n\n  - **`fade`**: Cross-fades between the old an new active views.\n\n  - **`slideLeft`**: The old and new active views are positioned next to each\n    other and both slide to the left.\n\n  - **`slideRight`**: The old and new active views are positioned next to each\n    other and both slide to the right.\n\n**Note:** Transitions are an opt-in feature and are enabled via an app's\n`transitions` attribute.",
            "uses": [
                "App.TransitionsNative"
            ],
            "since": "3.5.0"
        },
        "App.TransitionsNative": {
            "name": "App.TransitionsNative",
            "shortname": "App.TransitionsNative",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "App",
                "App",
                "App",
                "App",
                "App",
                "App",
                "App",
                "App.Transitions"
            ],
            "module": "app",
            "submodule": "app-transitions-native",
            "namespace": "",
            "file": "src/app/js/app-extensions/app-transitions-native.js",
            "line": 12,
            "description": "Provides the implementation of view transitions for `Y.App.Transitions` in\nbrowsers which support native CSS3 transitions.\n\nWhen this module is used, `Y.App.TransitionsNative` will automatically mix\nitself in to `Y.App`.",
            "since": "3.5.0"
        },
        "Array": {
            "name": "Array",
            "shortname": "Array",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "yui",
            "submodule": "yui-base",
            "namespace": "",
            "file": "src/yui/js/yui-array.js",
            "line": 11,
            "description": "Provides utility methods for working with arrays. Additional array helpers can\nbe found in the `collection` and `array-extras` modules.\n\n`Y.Array(thing)` returns a native array created from _thing_. Depending on\n_thing_'s type, one of the following will happen:\n\n  * Arrays are returned unmodified unless a non-zero _startIndex_ is\n    specified.\n  * Array-like collections (see `Array.test()`) are converted to arrays.\n  * For everything else, a new array is created with _thing_ as the sole\n    item.\n\nNote: elements that are also collections, such as `<form>` and `<select>`\nelements, are not automatically converted to arrays. To force a conversion,\npass `true` as the value of the _force_ parameter.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "thing",
                    "description": "The thing to arrayify.",
                    "type": "Any"
                },
                {
                    "name": "startIndex",
                    "description": "If non-zero and _thing_ is an array or array-like\n  collection, a subset of items starting at the specified index will be\n  returned.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "force",
                    "description": "If `true`, _thing_ will be treated as an\n  array-like collection no matter what.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "A native array created from _thing_, according to the rules\n  described above.",
                "type": "Array"
            }
        },
        "ArrayList": {
            "name": "ArrayList",
            "shortname": "ArrayList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "ModelList",
                "Recordset",
                "WidgetParent"
            ],
            "module": "collection",
            "submodule": "arraylist",
            "namespace": "",
            "file": "src/collection/js/arraylist.js",
            "line": 11,
            "description": "Generic ArrayList class for managing lists of items and iterating operations\nover them.  The targeted use for this class is for augmentation onto a\nclass that is responsible for managing multiple instances of another class\n(e.g. NodeList for Nodes).  The recommended use is to augment your class with\nArrayList, then use ArrayList.addMethod to mirror the API of the constituent\nitems on the list's API.\n\nThe default implementation creates immutable lists, but mutability can be\nprovided via the arraylist-add submodule or by implementing mutation methods\ndirectly on the augmented class's prototype.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "items",
                    "description": "array of items this list will be responsible for",
                    "type": "Array"
                }
            ]
        },
        "ArraySort": {
            "name": "ArraySort",
            "shortname": "ArraySort",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "arraysort",
            "namespace": "",
            "file": "src/arraysort/js/arraysort.js",
            "line": 11,
            "description": "Provides a case-insenstive comparator which can be used for array sorting."
        },
        "AsyncQueue": {
            "name": "AsyncQueue",
            "shortname": "AsyncQueue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "async-queue",
            "namespace": "",
            "file": "src/async-queue/js/async-queue.js",
            "line": 11,
            "description": "<p>A specialized queue class that supports scheduling callbacks to execute\nsequentially, iteratively, even asynchronously.</p>\n\n<p>Callbacks can be function refs or objects with the following keys.  Only\nthe <code>fn</code> key is required.</p>\n\n<ul>\n<li><code>fn</code> -- The callback function</li>\n<li><code>context</code> -- The execution context for the callbackFn.</li>\n<li><code>args</code> -- Arguments to pass to callbackFn.</li>\n<li><code>timeout</code> -- Millisecond delay before executing callbackFn.\n                    (Applies to each iterative execution of callback)</li>\n<li><code>iterations</code> -- Number of times to repeat the callback.\n<li><code>until</code> -- Repeat the callback until this function returns\n                        true.  This setting trumps iterations.</li>\n<li><code>autoContinue</code> -- Set to false to prevent the AsyncQueue from\n                       executing the next callback in the Queue after\n                       the callback completes.</li>\n<li><code>id</code> -- Name that can be used to get, promote, get the\n                       indexOf, or delete this callback.</li>\n</ul>",
            "extends": "EventTarget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "callback",
                    "description": "0..n callbacks to seed the queue",
                    "type": "Function|Object",
                    "multiple": true
                }
            ]
        },
        "Attribute": {
            "name": "Attribute",
            "shortname": "Attribute",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attribute",
            "submodule": "attribute-base",
            "namespace": "",
            "file": "src/attribute/js/Attribute.js",
            "line": 19,
            "description": "<p>\nAttribute provides configurable attribute support along with attribute change events. It is designed to be\naugmented on to a host class, and provides the host with the ability to configure attributes to store and retrieve state,\nalong with attribute change events.\n</p>\n<p>For example, attributes added to the host can be configured:</p>\n<ul>\n    <li>As read only.</li>\n    <li>As write once.</li>\n    <li>With a setter function, which can be used to manipulate\n    values passed to Attribute's <a href=\"#method_set\">set</a> method, before they are stored.</li>\n    <li>With a getter function, which can be used to manipulate stored values,\n    before they are returned by Attribute's <a href=\"#method_get\">get</a> method.</li>\n    <li>With a validator function, to validate values before they are stored.</li>\n</ul>\n\n<p>See the <a href=\"#method_addAttr\">addAttr</a> method, for the complete set of configuration\noptions available for attributes.</p>\n\n<p><strong>NOTE:</strong> Most implementations will be better off extending the <a href=\"Base.html\">Base</a> class,\ninstead of augmenting Attribute directly. Base augments Attribute and will handle the initial configuration\nof attributes for derived classes, accounting for values passed into the constructor.</p>",
            "params": [
                {
                    "name": "attrs",
                    "description": "The attributes to add during construction (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).\n       These can also be defined on the constructor being augmented with Attribute by defining the ATTRS property on the constructor.",
                    "type": "Object"
                },
                {
                    "name": "values",
                    "description": "The initial attribute values to apply (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).\n       These are not merged/cloned. The caller is responsible for isolating user provided values if required.",
                    "type": "Object"
                },
                {
                    "name": "lazy",
                    "description": "Whether or not to add attributes lazily (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).",
                    "type": "Boolean"
                }
            ],
            "uses": [
                "AttributeCore",
                "AttributeObservable",
                "EventTarget",
                "AttributeExtras"
            ]
        },
        "State": {
            "name": "State",
            "shortname": "State",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attribute",
            "namespace": "",
            "file": "src/attribute/js/State.js",
            "line": 1,
            "description": "The State class maintains state for a collection of named items, with\na varying number of properties defined.\n\nIt avoids the need to create a separate class for the item, and separate instances\nof these classes for each item, by storing the state in a 2 level hash table,\nimproving performance when the number of items is likely to be large.",
            "is_constructor": 1,
            "submodule": "attribute-core"
        },
        "AttributeCore": {
            "name": "AttributeCore",
            "shortname": "AttributeCore",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Attribute",
                "Base",
                "BaseCore"
            ],
            "module": "attribute",
            "submodule": "attribute-core",
            "namespace": "",
            "file": "src/attribute/js/AttributeCore.js",
            "line": 45,
            "description": "<p>\nAttributeCore provides the lightest level of configurable attribute support. It is designed to be\naugmented on to a host class, and provides the host with the ability to configure\nattributes to store and retrieve state, <strong>but without support for attribute change events</strong>.\n</p>\n<p>For example, attributes added to the host can be configured:</p>\n<ul>\n    <li>As read only.</li>\n    <li>As write once.</li>\n    <li>With a setter function, which can be used to manipulate\n    values passed to Attribute's <a href=\"#method_set\">set</a> method, before they are stored.</li>\n    <li>With a getter function, which can be used to manipulate stored values,\n    before they are returned by Attribute's <a href=\"#method_get\">get</a> method.</li>\n    <li>With a validator function, to validate values before they are stored.</li>\n</ul>\n\n<p>See the <a href=\"#method_addAttr\">addAttr</a> method, for the complete set of configuration\noptions available for attributes.</p>\n\n<p>Object/Classes based on AttributeCore can augment <a href=\"AttributeObservable.html\">AttributeObservable</a>\n(with true for overwrite) and <a href=\"AttributeExtras.html\">AttributeExtras</a> to add attribute event and\nadditional, less commonly used attribute methods, such as `modifyAttr`, `removeAttr` and `reset`.</p>",
            "params": [
                {
                    "name": "attrs",
                    "description": "The attributes to add during construction (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).\n       These can also be defined on the constructor being augmented with Attribute by defining the ATTRS property on the constructor.",
                    "type": "Object"
                },
                {
                    "name": "values",
                    "description": "The initial attribute values to apply (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).\n       These are not merged/cloned. The caller is responsible for isolating user provided values if required.",
                    "type": "Object"
                },
                {
                    "name": "lazy",
                    "description": "Whether or not to add attributes lazily (passed through to <a href=\"#method_addAttrs\">addAttrs</a>).",
                    "type": "Boolean"
                }
            ]
        },
        "AttributeExtras": {
            "name": "AttributeExtras",
            "shortname": "AttributeExtras",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "AttributeCore",
                "AttributeCore",
                "AttributeCore",
                "AttributeCore",
                "AttributeCore",
                "AttributeCore",
                "AttributeCore",
                "Attribute",
                "Base"
            ],
            "module": "attribute",
            "submodule": "attribute-extras",
            "namespace": "",
            "file": "src/attribute/js/AttributeExtras.js",
            "line": 29,
            "description": "A augmentable implementation for AttributeCore, providing less frequently used\nmethods for Attribute management such as modifyAttrs(), removeAttr and reset()"
        },
        "AttributeObservable": {
            "name": "AttributeObservable",
            "shortname": "AttributeObservable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "AttributeCore",
                "AttributeCore",
                "AttributeCore",
                "AttributeCore",
                "AttributeCore",
                "AttributeCore",
                "AttributeCore",
                "Attribute",
                "Base",
                "BaseObservable"
            ],
            "module": "attribute",
            "submodule": "attribute-observable",
            "namespace": "",
            "file": "src/attribute/js/AttributeObservable.js",
            "line": 24,
            "description": "Provides an augmentable implementation of attribute change events for\nAttributeCore.",
            "uses": [
                "EventTarget"
            ]
        },
        "AttributeEvents": {
            "name": "AttributeEvents",
            "shortname": "AttributeEvents",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attribute",
            "submodule": "attribute-observable",
            "namespace": "",
            "file": "src/attribute/js/AttributeObservable.js",
            "line": 196,
            "description": "The `AttributeEvents` class extension was deprecated in YUI 3.8.0 and is now\nan alias for the `AttributeObservable` class extension. Use that class\nextnesion instead. This alias will be removed in a future version of YUI.",
            "uses": [
                "EventTarget"
            ],
            "deprecated": true,
            "deprecationMessage": "Use `AttributeObservable` instead.",
            "see": [
                "AttributeObservable"
            ]
        },
        "AutoCompleteBase": {
            "name": "AutoCompleteBase",
            "shortname": "AutoCompleteBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "AutoCompleteList"
            ],
            "module": "autocomplete",
            "submodule": "autocomplete-base",
            "namespace": "",
            "file": "src/autocomplete/js/autocomplete-base.js",
            "line": 19,
            "description": "Extension that provides core autocomplete logic (but no UI implementation) for a\ntext input field or textarea.\n\nThe `AutoCompleteBase` class provides events and attributes that abstract away\ncore autocomplete logic and configuration, but does not provide a widget\nimplementation or suggestion UI. For a prepackaged autocomplete widget, see\n`AutoCompleteList`.\n\nThis extension cannot be instantiated directly, since it doesn't provide an\nactual implementation. It's intended to be mixed into a `Y.Base`-based class or\nwidget.\n\n`Y.Widget`-based example:\n\n    YUI().use('autocomplete-base', 'widget', function (Y) {\n        var MyAC = Y.Base.create('myAC', Y.Widget, [Y.AutoCompleteBase], {\n            // Custom prototype methods and properties.\n        }, {\n            // Custom static methods and properties.\n        });\n\n        // Custom implementation code.\n    });\n\n`Y.Base`-based example:\n\n    YUI().use('autocomplete-base', function (Y) {\n        var MyAC = Y.Base.create('myAC', Y.Base, [Y.AutoCompleteBase], {\n            initializer: function () {\n                this._bindUIACBase();\n                this._syncUIACBase();\n            },\n\n            // Custom prototype methods and properties.\n        }, {\n            // Custom static methods and properties.\n        });\n\n        // Custom implementation code.\n    });"
        },
        "AutoCompleteFilters": {
            "name": "AutoCompleteFilters",
            "shortname": "AutoCompleteFilters",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "autocomplete",
            "submodule": "autocomplete-filters",
            "namespace": "",
            "file": "src/autocomplete/js/autocomplete-filters.js",
            "line": 1,
            "description": "Provides pre-built result matching filters for AutoComplete.",
            "static": 1
        },
        "AutoCompleteHighlighters": {
            "name": "AutoCompleteHighlighters",
            "shortname": "AutoCompleteHighlighters",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "autocomplete",
            "submodule": "autocomplete-highlighters",
            "namespace": "",
            "file": "src/autocomplete/js/autocomplete-highlighters.js",
            "line": 1,
            "description": "Provides pre-built result highlighters for AutoComplete.",
            "static": 1
        },
        "AutoCompleteList": {
            "name": "AutoCompleteList",
            "shortname": "AutoCompleteList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "autocomplete",
            "submodule": "autocomplete-list",
            "namespace": "",
            "file": "src/autocomplete/js/autocomplete-list.js",
            "line": 8,
            "description": "Traditional autocomplete dropdown list widget, just like Mom used to make.",
            "extends": "Widget",
            "uses": [
                "AutoCompleteBase",
                "WidgetPosition",
                "WidgetPositionAlign"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "AutoComplete": {
            "name": "AutoComplete",
            "shortname": "AutoComplete",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "autocomplete",
            "submodule": "autocomplete-list",
            "namespace": "",
            "file": "src/autocomplete/js/autocomplete-list.js",
            "line": 876,
            "description": "Alias for <a href=\"AutoCompleteList.html\">`AutoCompleteList`</a>. See that class\nfor API docs."
        },
        "Plugin.AutoComplete": {
            "name": "Plugin.AutoComplete",
            "shortname": "Plugin.AutoComplete",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "autocomplete",
            "submodule": "autocomplete-plugin",
            "namespace": "",
            "file": "src/autocomplete/js/autocomplete-plugin.js",
            "line": 8,
            "description": "Binds an AutoCompleteList instance to a Node instance.",
            "example": [
                "\n\n    Y.one('#my-input').plug(Y.Plugin.AutoComplete, {\n        source: 'select * from search.suggest where query=\"{query}\"'\n    });\n\n    // You can now access the AutoCompleteList instance at Y.one('#my-input').ac"
            ],
            "extends": "AutoCompleteList"
        },
        "Base": {
            "name": "Base",
            "shortname": "Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "base",
            "submodule": "base-base",
            "namespace": "",
            "file": "src/base/js/Base.js",
            "line": 22,
            "description": "<p>\nA base class which objects requiring attributes and custom event support can\nextend. Base also handles the chaining of initializer and destructor methods across\nthe hierarchy as part of object construction and destruction. Additionally, attributes configured\nthrough the static <a href=\"#property_ATTRS\">ATTRS</a> property for each class\nin the hierarchy will be initialized by Base.\n</p>\n\n<p>\nThe static <a href=\"#property_NAME\">NAME</a> property of each class extending\nfrom Base will be used as the identifier for the class, and is used by Base to prefix\nall events fired by instances of that class.\n</p>",
            "is_constructor": 1,
            "uses": [
                "BaseCore",
                "BaseObservable",
                "AttributeCore",
                "AttributeObservable",
                "AttributeExtras",
                "EventTarget"
            ],
            "params": [
                {
                    "name": "config",
                    "description": "Object with configuration property name/value pairs. The object can be\nused to provide default values for the objects published attributes.\n\n<p>\nThe config object can also contain the following non-attribute properties, providing a convenient\nway to configure events listeners and plugins for the instance, as part of the constructor call:\n</p>\n\n<dl>\n    <dt>on</dt>\n    <dd>An event name to listener function map, to register event listeners for the \"on\" moment of the event. A constructor convenience property for the <a href=\"Base.html#method_on\">on</a> method.</dd>\n    <dt>after</dt>\n    <dd>An event name to listener function map, to register event listeners for the \"after\" moment of the event. A constructor convenience property for the <a href=\"Base.html#method_after\">after</a> method.</dd>\n    <dt>bubbleTargets</dt>\n    <dd>An object, or array of objects, to register as bubble targets for bubbled events fired by this instance. A constructor convenience property for the <a href=\"EventTarget.html#method_addTarget\">addTarget</a> method.</dd>\n    <dt>plugins</dt>\n    <dd>A plugin, or array of plugins to be plugged into the instance (see PluginHost's plug method for signature details). A constructor convenience property for the <a href=\"Plugin.Host.html#method_plug\">plug</a> method.</dd>\n</dl>",
                    "type": "Object"
                }
            ]
        },
        "BaseCore": {
            "name": "BaseCore",
            "shortname": "BaseCore",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Base"
            ],
            "module": "base",
            "submodule": "base-core",
            "namespace": "",
            "file": "src/base/js/BaseCore.js",
            "line": 43,
            "description": "The BaseCore class, is the lightest version of Base, and provides Base's\nbasic lifecycle management and ATTRS construction support, but doesn't\nfire init/destroy or attribute change events.\n\nBaseCore also handles the chaining of initializer and destructor methods across\nthe hierarchy as part of object construction and destruction. Additionally, attributes\nconfigured through the static <a href=\"#property_BaseCore.ATTRS\">ATTRS</a>\nproperty for each class in the hierarchy will be initialized by BaseCore.\n\nClasses which require attribute support, but don't intend to use/expose attribute\nchange events can extend BaseCore instead of Base for optimal kweight and\nruntime performance.",
            "is_constructor": 1,
            "uses": [
                "AttributeCore"
            ],
            "params": [
                {
                    "name": "cfg",
                    "description": "Object with configuration property name/value pairs.\nThe object can be used to provide initial values for the objects published\nattributes.",
                    "type": "Object"
                }
            ]
        },
        "BaseObservable": {
            "name": "BaseObservable",
            "shortname": "BaseObservable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "BaseCore",
                "BaseCore",
                "BaseCore",
                "BaseCore",
                "BaseCore",
                "BaseCore",
                "BaseCore",
                "Base"
            ],
            "module": "base",
            "submodule": "base-observable",
            "namespace": "",
            "file": "src/base/js/BaseObservable.js",
            "line": 19,
            "description": "Provides an augmentable implementation of lifecycle and attribute events for\n`BaseCore`.",
            "uses": [
                "AttributeObservable",
                "EventTarget"
            ],
            "since": "3.8.0"
        },
        "Button": {
            "name": "Button",
            "shortname": "Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "button",
            "namespace": "",
            "file": "src/button/js/button.js",
            "line": 12,
            "description": "Creates a Button",
            "extends": "Widget",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "ToggleButton": {
            "name": "ToggleButton",
            "shortname": "ToggleButton",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "button",
            "namespace": "",
            "file": "src/button/js/button.js",
            "line": 142,
            "description": "Creates a ToggleButton",
            "extends": "Button",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "ButtonCore": {
            "name": "ButtonCore",
            "shortname": "ButtonCore",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "button-core",
            "namespace": "",
            "file": "src/button/js/core.js",
            "line": 10,
            "description": "Creates a button",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "ButtonGroup": {
            "name": "ButtonGroup",
            "shortname": "ButtonGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "button-group",
            "namespace": "",
            "file": "src/button/js/group.js",
            "line": 12,
            "description": "Creates a ButtonGroup",
            "extends": "Widget",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "ButtonPlugin": {
            "name": "ButtonPlugin",
            "shortname": "ButtonPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "button-plugin",
            "namespace": "",
            "file": "src/button/js/plugin.js",
            "line": 8,
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "Cache": {
            "name": "Cache",
            "shortname": "Cache",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cache",
            "submodule": "cache-base",
            "namespace": "",
            "file": "src/cache/js/cache-base.js",
            "line": 17,
            "description": "Base class for the YUI Cache utility.",
            "extends": "Base",
            "is_constructor": 1
        },
        "CacheOffline": {
            "name": "CacheOffline",
            "shortname": "CacheOffline",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cache",
            "submodule": "cache-offline",
            "namespace": "",
            "file": "src/cache/js/cache-offline.js",
            "line": 8,
            "description": "Extends Cache utility with offline functionality.",
            "extends": "Cache",
            "is_constructor": 1
        },
        "Plugin.Cache": {
            "name": "Plugin.Cache",
            "shortname": "Plugin.Cache",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cache",
            "submodule": "cache-plugin",
            "namespace": "",
            "file": "src/cache/js/cache-plugin.js",
            "line": 8,
            "description": "Plugin.Cache adds pluginizability to Cache.",
            "extends": "Cache",
            "uses": [
                "Plugin.Base"
            ]
        },
        "Calendar": {
            "name": "Calendar",
            "shortname": "Calendar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "calendar",
            "namespace": "",
            "file": "src/calendar/js/calendar.js",
            "line": 30,
            "description": "month range of dates, rendered as a grid with date and\nweekday labels.",
            "extends": "CalendarBase",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object (see Configuration attributes)",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "CalendarBase": {
            "name": "CalendarBase",
            "shortname": "CalendarBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "calendar",
            "submodule": "calendar-base",
            "namespace": "",
            "file": "src/calendar/js/calendar-base.js",
            "line": 40,
            "description": "month range of dates, rendered as a grid with date and\nweekday labels.",
            "extends": "Widget",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object (see Configuration\nattributes)",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "Plugin.CalendarNavigator": {
            "name": "Plugin.CalendarNavigator",
            "shortname": "Plugin.CalendarNavigator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "calendarnavigator",
            "namespace": "Plugin",
            "file": "src/calendar/js/calendarnavigator.js",
            "line": 19,
            "description": "A plugin class which adds navigation controls to Calendar.",
            "extends": "Plugin.Base"
        },
        "Chart": {
            "name": "Chart",
            "shortname": "Chart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "namespace": "",
            "file": "src/charts/js/Chart.js",
            "line": 1,
            "description": "The Chart class is the basic application used to create a chart."
        },
        "ShapeGroup": {
            "name": "ShapeGroup",
            "shortname": "ShapeGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/ShapeGroup.js",
            "line": 33,
            "description": "Abstract class for creating groups of shapes with the same styles and dimensions.",
            "is_constructor": 1
        },
        "CircleGroup": {
            "name": "CircleGroup",
            "shortname": "CircleGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/CircleGroup.js",
            "line": 1,
            "description": "Abstract class for creating groups of circles with the same styles and dimensions."
        },
        "GroupRect": {
            "name": "GroupRect",
            "shortname": "GroupRect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/RectGroup.js",
            "line": 1,
            "description": "Abstract class for creating groups of rects with the same styles and dimensions."
        },
        "GroupDiamond": {
            "name": "GroupDiamond",
            "shortname": "GroupDiamond",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/DiamondGroup.js",
            "line": 1,
            "description": "Abstract class for creating groups of diamonds with the same styles and dimensions."
        },
        "EllipseGroup": {
            "name": "EllipseGroup",
            "shortname": "EllipseGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/EllipseGroup.js",
            "line": 1,
            "description": "Abstract class for creating groups of diamonds with the same styles and dimensions."
        },
        "Renderer": {
            "name": "Renderer",
            "shortname": "Renderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/Renderer.js",
            "line": 1,
            "description": "The Renderer class is a base class for chart components that use the `styles`\nattribute."
        },
        "LeftAxisLayout": {
            "name": "LeftAxisLayout",
            "shortname": "LeftAxisLayout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/LeftAxisLayout.js",
            "line": 1,
            "description": "Algorithmic strategy for rendering a left axis."
        },
        "RightAxisLayout": {
            "name": "RightAxisLayout",
            "shortname": "RightAxisLayout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/RightAxisLayout.js",
            "line": 1,
            "description": "RightAxisLayout contains algorithms for rendering a right axis."
        },
        "BottomAxisLayout": {
            "name": "BottomAxisLayout",
            "shortname": "BottomAxisLayout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/BottomAxisLayout.js",
            "line": 1,
            "description": "Contains algorithms for rendering a bottom axis."
        },
        "TopAxisLayout": {
            "name": "TopAxisLayout",
            "shortname": "TopAxisLayout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/TopAxisLayout.js",
            "line": 1,
            "description": "Contains algorithms for rendering a top axis."
        },
        "Axis": {
            "name": "Axis",
            "shortname": "Axis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/Axis.js",
            "line": 1,
            "description": "The Axis class. Generates axes for a chart."
        },
        "AxisType": {
            "name": "AxisType",
            "shortname": "AxisType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/AxisType.js",
            "line": 1,
            "description": "AxisType is an abstract class that manages the data for an axis."
        },
        "NumericAxis": {
            "name": "NumericAxis",
            "shortname": "NumericAxis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/NumericAxis.js",
            "line": 1,
            "description": "NumericAxis manages numeric data on an axis."
        },
        "StackedAxis": {
            "name": "StackedAxis",
            "shortname": "StackedAxis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/StackedAxis.js",
            "line": 1,
            "description": "StackedAxis manages stacked numeric data on an axis."
        },
        "TimeAxis": {
            "name": "TimeAxis",
            "shortname": "TimeAxis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/TimeAxis.js",
            "line": 1,
            "description": "TimeAxis manages time data on an axis."
        },
        "CategoryAxis": {
            "name": "CategoryAxis",
            "shortname": "CategoryAxis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/CategoryAxis.js",
            "line": 1,
            "description": "CategoryAxis manages category data on an axis."
        },
        "CurveUtil": {
            "name": "CurveUtil",
            "shortname": "CurveUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/CurveUtil.js",
            "line": 1,
            "description": "Utility class used for calculating curve points."
        },
        "StackingUtil": {
            "name": "StackingUtil",
            "shortname": "StackingUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/StackingUtil.js",
            "line": 1,
            "description": "Utility class used for creating stacked series."
        },
        "Lines": {
            "name": "Lines",
            "shortname": "Lines",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/Lines.js",
            "line": 1,
            "description": "Utility class used for drawing lines."
        },
        "Fills": {
            "name": "Fills",
            "shortname": "Fills",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "namespace": "",
            "file": "src/charts/js/Fills.js",
            "line": 1,
            "description": "Utility class used for drawing area fills.",
            "submodule": "charts-base"
        },
        "Plots": {
            "name": "Plots",
            "shortname": "Plots",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/Plots.js",
            "line": 1,
            "description": "Utility class used for drawing markers."
        },
        "Histogram": {
            "name": "Histogram",
            "shortname": "Histogram",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/Histogram.js",
            "line": 1,
            "description": "Histogram is the base class for Column and Bar series."
        },
        "CartesianSeries": {
            "name": "CartesianSeries",
            "shortname": "CartesianSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/CartesianSeries.js",
            "line": 1,
            "description": "The CartesianSeries class creates a chart with horizontal and vertical axes."
        },
        "MarkerSeries": {
            "name": "MarkerSeries",
            "shortname": "MarkerSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/MarkerSeries.js",
            "line": 1,
            "description": "The MarkerSeries class renders quantitative data by plotting relevant data points\non a graph."
        },
        "LineSeries": {
            "name": "LineSeries",
            "shortname": "LineSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/LineSeries.js",
            "line": 1,
            "description": "The LineSeries class renders quantitative data on a graph by connecting relevant data points."
        },
        "SplineSeries": {
            "name": "SplineSeries",
            "shortname": "SplineSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/SplineSeries.js",
            "line": 1,
            "description": "SplineSeries renders a graph with data points connected by a curve."
        },
        "StackedSplineSeries": {
            "name": "StackedSplineSeries",
            "shortname": "StackedSplineSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/StackedSplineSeries.js",
            "line": 1,
            "description": "StackedSplineSeries creates spline graphs in which the different series are stacked along a value axis\nto indicate their contribution to a cumulative total."
        },
        "StackedMarkerSeries": {
            "name": "StackedMarkerSeries",
            "shortname": "StackedMarkerSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/StackedMarkerSeries.js",
            "line": 1,
            "description": "StackedMarkerSeries plots markers with different series stacked along the value axis to indicate each\nseries' contribution to a cumulative total."
        },
        "ColumnSeries": {
            "name": "ColumnSeries",
            "shortname": "ColumnSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/ColumnSeries.js",
            "line": 1,
            "description": "The ColumnSeries class renders columns positioned horizontally along a category or time axis. The columns'\nlengths are proportional to the values they represent along a vertical axis.\nand the relevant data points."
        },
        "BarSeries": {
            "name": "BarSeries",
            "shortname": "BarSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/BarSeries.js",
            "line": 1,
            "description": "The BarSeries class renders bars positioned vertically along a category or time axis. The bars'\nlengths are proportional to the values they represent along a horizontal axis.\nand the relevant data points."
        },
        "AreaSeries": {
            "name": "AreaSeries",
            "shortname": "AreaSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/AreaSeries.js",
            "line": 1,
            "description": "The AreaSeries class renders quantitative data on a graph by creating a fill between 0\nand the relevant data points."
        },
        "AreaSplineSeries": {
            "name": "AreaSplineSeries",
            "shortname": "AreaSplineSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/AreaSplineSeries.js",
            "line": 1,
            "description": "AreaSplineSeries renders an area graph with data points connected by a curve."
        },
        "StackedAreaSplineSeries": {
            "name": "StackedAreaSplineSeries",
            "shortname": "StackedAreaSplineSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/StackedAreaSplineSeries.js",
            "line": 1,
            "description": "StackedAreaSplineSeries creates a stacked area chart with points data points connected by a curve."
        },
        "ComboSeries": {
            "name": "ComboSeries",
            "shortname": "ComboSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/ComboSeries.js",
            "line": 1,
            "description": "The ComboSeries class renders a combination of lines, plots and area fills in a single series.\nEach series type has a corresponding boolean attribute indicating if it is rendered. By default,\nlines and plots are rendered and area is not."
        },
        "StackedComboSeries": {
            "name": "StackedComboSeries",
            "shortname": "StackedComboSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/StackedComboSeries.js",
            "line": 1,
            "description": "The StackedComboSeries class renders a combination of lines, plots and area fills in a single series. Series\nare stacked along the value axis to indicate each series contribution to a cumulative total. Each\nseries type has a corresponding boolean attribute indicating if it is rendered. By default, all three types are\nrendered."
        },
        "ComboSplineSeries": {
            "name": "ComboSplineSeries",
            "shortname": "ComboSplineSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/ComboSplineSeries.js",
            "line": 1,
            "description": "The ComboSplineSeries class renders a combination of splines, plots and areaspline fills in a single series. Each\nseries type has a corresponding boolean attribute indicating if it is rendered. By default, splines and plots\nare rendered and areaspline is not."
        },
        "StackedComboSplineSeries": {
            "name": "StackedComboSplineSeries",
            "shortname": "StackedComboSplineSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/StackedComboSplineSeries.js",
            "line": 1,
            "description": "The StackedComboSplineSeries class renders a combination of splines, plots and areaspline fills in a single series. Series\nare stacked along the value axis to indicate each series contribution to a cumulative total. Each\nseries type has a corresponding boolean attribute indicating if it is rendered. By default, all three types are\nrendered."
        },
        "StackedLineSeries": {
            "name": "StackedLineSeries",
            "shortname": "StackedLineSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/StackedLineSeries.js",
            "line": 1,
            "description": "StackedLineSeries creates line graphs in which the different series are stacked along a value axis\nto indicate their contribution to a cumulative total."
        },
        "StackedAreaSeries": {
            "name": "StackedAreaSeries",
            "shortname": "StackedAreaSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/StackedAreaSeries.js",
            "line": 1,
            "description": "StackedAreaSeries area fills to display data showing its contribution to a whole."
        },
        "StackedColumnSeries": {
            "name": "StackedColumnSeries",
            "shortname": "StackedColumnSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/StackedColumnSeries.js",
            "line": 1,
            "description": "The StackedColumnSeries renders column chart in which series are stacked vertically to show\ntheir contribution to the cumulative total."
        },
        "StackedBarSeries": {
            "name": "StackedBarSeries",
            "shortname": "StackedBarSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/StackedBarSeries.js",
            "line": 1,
            "description": "The StackedBarSeries renders bar chart in which series are stacked horizontally to show\ntheir contribution to the cumulative total."
        },
        "PieSeries": {
            "name": "PieSeries",
            "shortname": "PieSeries",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/PieSeries.js",
            "line": 1,
            "description": "PieSeries visualizes data as a circular chart divided into wedges which represent data as a\npercentage of a whole."
        },
        "Gridlines": {
            "name": "Gridlines",
            "shortname": "Gridlines",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/Gridlines.js",
            "line": 1,
            "description": "Gridlines draws gridlines on a Graph."
        },
        "Graph": {
            "name": "Graph",
            "shortname": "Graph",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/Graph.js",
            "line": 1,
            "description": "Graph manages and contains series instances for a `CartesianChart`\ninstance."
        },
        "ChartBase": {
            "name": "ChartBase",
            "shortname": "ChartBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/ChartBase.js",
            "line": 1,
            "description": "The ChartBase class is an abstract class used to create charts."
        },
        "CartesianChart": {
            "name": "CartesianChart",
            "shortname": "CartesianChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/CartesianChart.js",
            "line": 1,
            "description": "The CartesianChart class creates a chart with horizontal and vertical axes."
        },
        "PieChart": {
            "name": "PieChart",
            "shortname": "PieChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-base",
            "namespace": "",
            "file": "src/charts/js/PieChart.js",
            "line": 1,
            "description": "The PieChart class creates a pie chart"
        },
        "HorizontalLegendLayout": {
            "name": "HorizontalLegendLayout",
            "shortname": "HorizontalLegendLayout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-legend",
            "namespace": "",
            "file": "src/charts/js/CartesianChartLegend.js",
            "line": 48,
            "description": "Contains methods for displaying items horizontally in a legend."
        },
        "VerticalLegendLayout": {
            "name": "VerticalLegendLayout",
            "shortname": "VerticalLegendLayout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-legend",
            "namespace": "",
            "file": "src/charts/js/CartesianChartLegend.js",
            "line": 207,
            "description": "Contains methods for displaying items vertically in a legend."
        },
        "ChartLegend": {
            "name": "ChartLegend",
            "shortname": "ChartLegend",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "charts",
            "submodule": "charts-legend",
            "namespace": "",
            "file": "src/charts/js/ChartLegend.js",
            "line": 1,
            "description": "ChartLegend provides a legend for a chart.",
            "extends": "Widget"
        },
        "ClassNameManager": {
            "name": "ClassNameManager",
            "shortname": "ClassNameManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "classnamemanager",
            "namespace": "",
            "file": "src/classnamemanager/js/classnamemanager.js",
            "line": 7,
            "description": "A singleton class providing: \n\n<ul>\n   <li>Easy creation of prefixed class names</li>\n   <li>Caching of previously created class names for improved performance.</li>\n</ul>",
            "static": 1
        },
        "ClickableRail": {
            "name": "ClickableRail",
            "shortname": "ClickableRail",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Slider"
            ],
            "module": "slider",
            "submodule": "clickable-rail",
            "namespace": "",
            "file": "src/slider/js/clickable-rail.js",
            "line": 9,
            "description": "Slider extension that allows clicking on the Slider's rail element,\ntriggering the thumb to align with the location of the click."
        },
        "Color.Base": {
            "name": "Color.Base",
            "shortname": "Color.Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "color",
            "submodule": "color-base",
            "namespace": "Color",
            "file": "src/color/js/color-base.js",
            "line": 1,
            "description": "Color provides static methods for color conversion.\n\n    Y.Color.toRGB('f00'); // rgb(255, 0, 0)\n\n    Y.Color.toHex('rgb(255, 255, 0)'); // #ffff00"
        },
        "Color.Harmony": {
            "name": "Color.Harmony",
            "shortname": "Color.Harmony",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "color",
            "submodule": "color-harmony",
            "namespace": "Color",
            "file": "src/color/js/color-harmony.js",
            "line": 1,
            "description": "Color Harmony provides methods useful for color combination discovery."
        },
        "Color.HSL": {
            "name": "Color.HSL",
            "shortname": "Color.HSL",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "color",
            "submodule": "color-hsl",
            "namespace": "Color",
            "file": "src/color/js/color-hsl.js",
            "line": 1,
            "description": "Color provides static methods for color conversion to hsl values.\n\n    Y.Color.toHSL('f00'); // hsl(0, 100%, 50%)\n\n    Y.Color.toHSLA('rgb(255, 255, 0'); // hsla(60, 100%, 50%, 1)"
        },
        "Color.HSV": {
            "name": "Color.HSV",
            "shortname": "Color.HSV",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "color",
            "submodule": "color-hsv",
            "namespace": "Color",
            "file": "src/color/js/color-hsv.js",
            "line": 1,
            "description": "Color provides static methods for color conversion hsv values.\n\n    Y.Color.toHSV('f00'); // hsv(0, 100%, 100%)\n\n    Y.Color.toHSVA('rgb(255, 255, 0'); // hsva(60, 100%, 100%, 1)"
        },
        "Console": {
            "name": "Console",
            "shortname": "Console",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "console",
            "namespace": "",
            "file": "src/console/js/console.js",
            "line": 1,
            "description": "Console creates a visualization for messages logged through calls to a YUI\ninstance's <code>Y.log( message, category, source )</code> method.  The\ndebug versions of YUI modules will include logging statements to offer some\ninsight into the steps executed during that module's operation.  Including\nlog statements in your code will cause those messages to also appear in the\nConsole.  Use Console to aid in developing your page or application.\n\nEntry categories &quot;info&quot;, &quot;warn&quot;, and &quot;error&quot;\nare also referred to as the log level, and entries are filtered against the\nconfigured logLevel."
        },
        "Plugin.ConsoleFilters": {
            "name": "Plugin.ConsoleFilters",
            "shortname": "Plugin.ConsoleFilters",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "console-filters",
            "namespace": "Plugin",
            "file": "src/console-filters/js/console-filters.js",
            "line": 1,
            "description": "<p>Provides Plugin.ConsoleFilters plugin class.</p>\n\n<p>This plugin adds the ability to control which Console entries display by filtering on category and source. Two groups of checkboxes are added to the Console footer, one for categories and the other for sources.  Only those messages that match a checked category or source are displayed.</p>"
        },
        "Cookie": {
            "name": "Cookie",
            "shortname": "Cookie",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cookie",
            "namespace": "",
            "file": "src/cookie/js/Cookie.js",
            "line": 47,
            "description": "Cookie utility.",
            "static": 1
        },
        "Plugin.CreateLinkBase": {
            "name": "Plugin.CreateLinkBase",
            "shortname": "Plugin.CreateLinkBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "editor",
            "namespace": "",
            "file": "src/editor/js/createlink-base.js",
            "line": 2,
            "description": "Adds prompt style link creation. Adds an override for the\n<a href=\"Plugin.ExecCommand.html#method_COMMANDS.createlink\">createlink execCommand</a>.",
            "submodule": "createlink-base",
            "static": 1
        },
        "ExecCommand": {
            "name": "ExecCommand",
            "shortname": "ExecCommand",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "editor",
            "namespace": ""
        },
        "DataSchema.Array": {
            "name": "DataSchema.Array",
            "shortname": "DataSchema.Array",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dataschema",
            "submodule": "dataschema-array",
            "namespace": "",
            "file": "src/dataschema/js/dataschema-array.js",
            "line": 9,
            "description": "Provides a DataSchema implementation which can be used to work with data\nstored in arrays.\n\nSee the `apply` method below for usage.",
            "extends": "DataSchema.Base",
            "static": 1
        },
        "DataSchema.Base": {
            "name": "DataSchema.Base",
            "shortname": "DataSchema.Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dataschema",
            "submodule": "dataschema-base",
            "namespace": "",
            "file": "src/dataschema/js/dataschema-base.js",
            "line": 19,
            "description": "Base class for the YUI DataSchema Utility.",
            "static": 1
        },
        "DataSchema.JSON": {
            "name": "DataSchema.JSON",
            "shortname": "DataSchema.JSON",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dataschema",
            "submodule": "dataschema-json",
            "namespace": "",
            "file": "src/dataschema/js/dataschema-json.js",
            "line": 8,
            "description": "Provides a DataSchema implementation which can be used to work with JSON data.\n\nSee the `apply` method for usage.",
            "extends": "DataSchema.Base",
            "static": 1
        },
        "DataSchema.Text": {
            "name": "DataSchema.Text",
            "shortname": "DataSchema.Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dataschema",
            "submodule": "dataschema-text",
            "namespace": "",
            "file": "src/dataschema/js/dataschema-text.js",
            "line": 9,
            "description": "Provides a DataSchema implementation which can be used to work with\ndelimited text data.\n\nSee the `apply` method for usage.",
            "extends": "DataSchema.Base",
            "static": 1
        },
        "DataSchema.XML": {
            "name": "DataSchema.XML",
            "shortname": "DataSchema.XML",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dataschema",
            "submodule": "dataschema-xml",
            "namespace": "",
            "file": "src/dataschema/js/dataschema-xml.js",
            "line": 8,
            "description": "Provides a DataSchema implementation which can be used to work with XML data.\n\nSee the `apply` method for usage.",
            "extends": "DataSchema.Base",
            "static": 1
        },
        "DataSourceArraySchema": {
            "name": "DataSourceArraySchema",
            "shortname": "DataSourceArraySchema",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "submodule": "datasource-arrayschema",
            "namespace": "",
            "file": "src/datasource/js/datasource-arrayschema.js",
            "line": 8,
            "description": "Adds schema-parsing to the DataSource Utility.",
            "extends": "Plugin.Base"
        },
        "DataSourceCacheExtension": {
            "name": "DataSourceCacheExtension",
            "shortname": "DataSourceCacheExtension",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "submodule": "datasource-cache",
            "namespace": "",
            "file": "src/datasource/js/datasource-cache.js",
            "line": 8,
            "description": "DataSourceCache extension binds Cache to DataSource."
        },
        "DataSourceCache": {
            "name": "DataSourceCache",
            "shortname": "DataSourceCache",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "submodule": "datasource-cache",
            "namespace": "",
            "file": "src/datasource/js/datasource-cache.js",
            "line": 121,
            "description": "DataSource plugin adds cache functionality.",
            "extends": "Cache",
            "uses": [
                "Plugin.Base",
                "DataSourceCachePlugin"
            ]
        },
        "DataSource.Function": {
            "name": "DataSource.Function",
            "shortname": "DataSource.Function",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "submodule": "datasource-function",
            "namespace": "",
            "file": "src/datasource/js/datasource-function.js",
            "line": 9,
            "description": "Function subclass for the DataSource Utility.",
            "extends": "DataSource.Local",
            "is_constructor": 1
        },
        "DataSource.Get": {
            "name": "DataSource.Get",
            "shortname": "DataSource.Get",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "submodule": "datasource-get",
            "namespace": "",
            "file": "src/datasource/js/datasource-get.js",
            "line": 8,
            "description": "Get Utility subclass for the DataSource Utility.",
            "extends": "DataSource.Local",
            "is_constructor": 1
        },
        "DataSource.IO": {
            "name": "DataSource.IO",
            "shortname": "DataSource.IO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "submodule": "datasource-io",
            "namespace": "",
            "file": "src/datasource/js/datasource-io.js",
            "line": 8,
            "description": "IO subclass for the DataSource Utility.",
            "extends": "DataSource.Local",
            "is_constructor": 1
        },
        "DataSourceJSONSchema": {
            "name": "DataSourceJSONSchema",
            "shortname": "DataSourceJSONSchema",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "submodule": "datasource-jsonschema",
            "namespace": "",
            "file": "src/datasource/js/datasource-jsonschema.js",
            "line": 8,
            "description": "Adds schema-parsing to the DataSource Utility.",
            "extends": "Plugin.Base"
        },
        "DataSource.Local": {
            "name": "DataSource.Local",
            "shortname": "DataSource.Local",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "submodule": "datasource-local",
            "namespace": "",
            "file": "src/datasource/js/datasource-local.js",
            "line": 18,
            "description": "Base class for the DataSource Utility.",
            "extends": "Base",
            "is_constructor": 1
        },
        "Pollable": {
            "name": "Pollable",
            "shortname": "Pollable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "submodule": "datasource-polling",
            "namespace": "",
            "file": "src/datasource/js/datasource-polling.js",
            "line": 8,
            "description": "Adds polling to the DataSource Utility.",
            "extends": "DataSource.Local"
        },
        "DataSourceTextSchema": {
            "name": "DataSourceTextSchema",
            "shortname": "DataSourceTextSchema",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "submodule": "datasource-textschema",
            "namespace": "",
            "file": "src/datasource/js/datasource-textschema.js",
            "line": 8,
            "description": "Adds schema-parsing to the DataSource Utility.",
            "extends": "Plugin.Base"
        },
        "DataSourceXMLSchema": {
            "name": "DataSourceXMLSchema",
            "shortname": "DataSourceXMLSchema",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datasource",
            "submodule": "datasource-xmlschema",
            "namespace": "",
            "file": "src/datasource/js/datasource-xmlschema.js",
            "line": 8,
            "description": "Adds schema-parsing to the DataSource Utility.",
            "extends": "Plugin.Base"
        },
        "DataTable": {
            "name": "DataTable",
            "shortname": "DataTable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatable",
            "submodule": "datatable-base",
            "namespace": "",
            "file": "src/datatable/js/base.js",
            "line": 16,
            "description": "A Widget for displaying tabular data.  Before feature modules are `use()`d,\nthis class is functionally equivalent to DataTable.Base.  However, feature\nmodules can modify this class in non-destructive ways, expanding the API and\nfunctionality.\n\nThis is the primary DataTable class.  Out of the box, it provides the ability\nto dynamically generate an HTML table from a set of column configurations and\nrow data.  But feature module inclusion can add table sorting, pagintaion,\nhighlighting, selection, and more.\n\n<pre><code>\n// The functionality of this table would require additional modules be use()d,\n// but the feature APIs are aggregated onto Y.DataTable.\n// (Snippet is for illustration. Not all features are available today.)\nvar table = new Y.DataTable({\n    columns: [\n        { type: 'checkbox', defaultChecked: true },\n        { key: 'firstName', sortable: true, resizable: true },\n        { key: 'lastName', sortable: true },\n        { key: 'role', formatter: toRoleName }\n    ],\n    data: {\n        source: 'http://myserver.com/service/json',\n        type: 'json',\n        schema: {\n            resultListLocator: 'results.users',\n            fields: [\n                'username',\n                'firstName',\n                'lastName',\n                { key: 'role', type: 'number' }\n            ]\n        }\n    },\n    recordType: UserModel,\n    pagedData: {\n        location: 'footer',\n        pageSizes: [20, 50, 'all'],\n        rowsPerPage: 20,\n        pageLinks: 5\n    },\n    editable: true\n});\n</code></pre>\n\n### Column Configuration\n\nThe column configurations are set in the form of an array of objects, where\neach object corresponds to a column.  For columns populated directly from the\nrow data, a 'key' property is required to bind the column to that property or\nattribute in the row data.\n\nNot all columns need to relate to row data, nor do all properties or attributes\nof the row data need to have a corresponding column.  However, only those\ncolumns included in the `columns` configuration attribute will be rendered.\n\nOther column configuration properties are supported by the configured\n`view`, class as well as any features added by plugins or class extensions.\nSee the description of DataTable.TableView and its subviews\nDataTable.HeaderView, DataTable.BodyView, and DataTable.FooterView (and other\nDataTable feature classes) to see what column properties they support.\n\nSome examples of column configurations would be:\n\n<pre><code>\n// Basic\nvar columns = [{ key: 'firstName' }, { key: 'lastName' }, { key: 'age' }];\n\n// For columns without any additional configuration, strings can be used\nvar columns = ['firstName', 'lastName', 'age'];\n\n// Multi-row column headers (see DataTable.HeaderView for details)\nvar columns = [\n    {\n        label: 'Name',\n        children: [\n            { key: 'firstName' },\n            { key: 'lastName' }\n        ]\n    },\n    'age' // mixing and matching objects and strings is ok\n];\n\n// Including columns that are not related 1:1 to row data fields/attributes\n// (See DataTable.BodyView for details)\nvar columns = [\n    {\n        label: 'Name', // Needed for the column header\n        formatter: function (o) {\n            // Fill the column cells with data from firstName and lastName\n            if (o.data.age > 55) {\n                o.className += ' senior';\n            }\n            return o.data.lastName + ', ' + o.data.firstName;\n        }\n    },\n    'age'\n];\n\n// Columns that include feature configurations (for illustration; not all\n// features are available today).\nvar columns = [\n    { type: 'checkbox', defaultChecked: true },\n    { key: 'firstName', sortable: true, resizable: true, min-width: '300px' },\n    { key: 'lastName', sortable: true, resizable: true, min-width: '300px' },\n    { key: 'age', emptyCellValue: '<em>unknown</em>' }\n];\n</code></pre>\n\n### Row Data Configuration\n\nThe `data` configuration attribute is responsible for housing the data objects that will be rendered as rows.  You can provide this information in two ways by default:\n\n1. An array of simple objects with key:value pairs\n2. A ModelList of Base-based class instances (presumably Model subclass\n   instances)\n\nIf an array of objects is passed, it will be translated into a ModelList filled\nwith instances of the class provided to the `recordType` attribute.  This\nattribute can also create a custom Model subclass from an array of field names\nor an object of attribute configurations.  If no `recordType` is provided, one\nwill be created for you from available information (see `_initRecordType`).\nProviding either your own ModelList instance for `data`, or at least Model\nclass for `recordType`, is the best way to control client-server\nsynchronization when modifying data on the client side.\n\nThe ModelList instance that manages the table's data is available in the `data`\nproperty on the DataTable instance.\n\n\n### Rendering\n\nTable rendering is a collaborative process between the DataTable and its\nconfigured `view`. The DataTable creates an instance of the configured `view`\n(DataTable.TableView by default), and calls its `render()` method.\nDataTable.TableView, for instance, then creates the `<table>` and `<caption>`,\nthen delegates the rendering of the specific sections of the table to subviews,\nwhich can be configured as `headerView`, `bodyView`, and `footerView`.\nDataTable.TableView defaults the `headerView` to DataTable.HeaderView and the\n`bodyView` to DataTable.BodyView, but leaves the `footerView` unassigned.\nSetting any subview to `null` will result in that table section not being\nrendered.",
            "extends": "DataTable.Base",
            "since": "3.5.0"
        },
        "DataTable.Base": {
            "name": "DataTable.Base",
            "shortname": "DataTable.Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatable",
            "submodule": "datatable-base",
            "namespace": "DataTable",
            "file": "src/datatable/js/base.js",
            "line": 166,
            "description": "The baseline implementation of a DataTable.  This class should be used\nprimarily as a superclass for a custom DataTable with a specific set of\nfeatures.  Because features can be composed onto `Y.DataTable`, custom\nsubclasses of DataTable.Base will remain unmodified when new feature modules\nare loaded.\n\nExample usage might look like this:\n\n<pre><code>\n// Custom subclass with only sorting and mutability added.  If other datatable\n// feature modules are loaded, this class will not be affected.\nvar MyTableClass = Y.Base.create('table', Y.DataTable.Base,\n                       [ Y.DataTable.Sortable, Y.DataTable.Mutable ]);\n\nvar table = new MyTableClass({\n    columns: ['firstName', 'lastName', 'age'],\n    data: [\n        { firstName: 'Frank', lastName: 'Zappa', age: 71 },\n        { firstName: 'Frank', lastName: 'Lloyd Wright', age: 144 },\n        { firstName: 'Albert', lastName: 'Einstein', age: 132 },\n        ...\n    ]\n});\n\ntable.render('#over-there');\n\n// DataTable.Base can be instantiated if a featureless table is needed.\nvar table = new Y.DataTable.Base({\n    columns: ['firstName', 'lastName', 'age'],\n    data: [\n        { firstName: 'Frank', lastName: 'Zappa', age: 71 },\n        { firstName: 'Frank', lastName: 'Lloyd Wright', age: 144 },\n        { firstName: 'Albert', lastName: 'Einstein', age: 132 },\n        ...\n    ]\n});\n\ntable.render('#in-here');\n</code></pre>\n\nDataTable.Base is built from DataTable.Core, and sets the default `view`\nto `Y.DataTable.TableView`.",
            "extends": "Widget",
            "uses": [
                "DataTable.Core"
            ],
            "since": "3.5.0"
        },
        "DataTable.BodyView": {
            "name": "DataTable.BodyView",
            "shortname": "DataTable.BodyView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatable",
            "submodule": "datatable-body",
            "namespace": "DataTable",
            "file": "src/datatable/js/body.js",
            "line": 19,
            "description": "View class responsible for rendering the `<tbody>` section of a table. Used as\nthe default `bodyView` for `Y.DataTable.Base` and `Y.DataTable` classes.\n\nTranslates the provided `modelList` into a rendered `<tbody>` based on the data\nin the constituent Models, altered or ammended by any special column\nconfigurations.\n\nThe `columns` configuration, passed to the constructor, determines which\ncolumns will be rendered.\n\nThe rendering process involves constructing an HTML template for a complete row\nof data, built by concatenating a customized copy of the instance's\n`CELL_TEMPLATE` into the `ROW_TEMPLATE` once for each column.  This template is\nthen populated with values from each Model in the `modelList`, aggregating a\ncomplete HTML string of all row and column data.  A `<tbody>` Node is then created from the markup and any column `nodeFormatter`s are applied.\n\nSupported properties of the column objects include:\n\n  * `key` - Used to link a column to an attribute in a Model.\n  * `name` - Used for columns that don't relate to an attribute in the Model\n    (`formatter` or `nodeFormatter` only) if the implementer wants a\n    predictable name to refer to in their CSS.\n  * `cellTemplate` - Overrides the instance's `CELL_TEMPLATE` for cells in this\n    column only.\n  * `formatter` - Used to customize or override the content value from the\n    Model.  These do not have access to the cell or row Nodes and should\n    return string (HTML) content.\n  * `nodeFormatter` - Used to provide content for a cell as well as perform any\n    custom modifications on the cell or row Node that could not be performed by\n    `formatter`s.  Should be used sparingly for better performance.\n  * `emptyCellValue` - String (HTML) value to use if the Model data for a\n    column, or the content generated by a `formatter`, is the empty string,\n    `null`, or `undefined`.\n  * `allowHTML` - Set to `true` if a column value, `formatter`, or\n    `emptyCellValue` can contain HTML.  This defaults to `false` to protect\n    against XSS.\n  * `className` - Space delimited CSS classes to add to all `<td>`s in a column.\n\nColumn `formatter`s are passed an object (`o`) with the following properties:\n\n  * `value` - The current value of the column's associated attribute, if any.\n  * `data` - An object map of Model keys to their current values.\n  * `record` - The Model instance.\n  * `column` - The column configuration object for the current column.\n  * `className` - Initially empty string to allow `formatter`s to add CSS \n    classes to the cell's `<td>`.\n  * `rowIndex` - The zero-based row number.\n  * `rowClass` - Initially empty string to allow `formatter`s to add CSS\n    classes to the cell's containing row `<tr>`.\n\nThey may return a value or update `o.value` to assign specific HTML content.  A\nreturned value has higher precedence.\n\nColumn `nodeFormatter`s are passed an object (`o`) with the following\nproperties:\n\n  * `value` - The current value of the column's associated attribute, if any.\n  * `td` - The `<td>` Node instance.\n  * `cell` - The `<div>` liner Node instance if present, otherwise, the `<td>`.\n    When adding content to the cell, prefer appending into this property.\n  * `data` - An object map of Model keys to their current values.\n  * `record` - The Model instance.\n  * `column` - The column configuration object for the current column.\n  * `rowIndex` - The zero-based row number.\n\nThey are expected to inject content into the cell's Node directly, including\nany \"empty\" cell content.  Each `nodeFormatter` will have access through the\nNode API to all cells and rows in the `<tbody>`, but not to the `<table>`, as\nit will not be attached yet.\n\nIf a `nodeFormatter` returns `false`, the `o.td` and `o.cell` Nodes will be\n`destroy()`ed to remove them from the Node cache and free up memory.  The DOM\nelements will remain as will any content added to them.  _It is highly\nadvisable to always return `false` from your `nodeFormatter`s_.",
            "extends": "View",
            "since": "3.5.0"
        },
        "DataTable.ColumnWidths": {
            "name": "DataTable.ColumnWidths",
            "shortname": "DataTable.ColumnWidths",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatable",
            "submodule": "datatable-column-widths",
            "namespace": "",
            "file": "src/datatable/js/colwidths.js",
            "line": 45,
            "description": "_API docs for this extension are included in the DataTable class._\n\nAdds basic, programmatic column width support to DataTable. Note, this does not\nadd support for truncated columns.  Due to the way HTML tables render, column\nwidth is more like a \"recommended width\".  Column content wider than the\nassigned width will cause the column to expand, despite the configured width.\nSimilarly if the table is too narrow to fit the column with the configured\ncolumn width, the column width will be reduced.\n\nTo set a column width, either add a `width` value to the column configuration\nor call the `setColumnWidth(id, width)` method.\n\nNote, assigning column widths is possible without this module, as each cell is\ndecorated with a class appropriate for that column which you can statically\ntarget in your site's CSS.\n\nTo achieve absolute column widths, with content truncation, you can either:\n\n1. Use this module, configure *all* columns to have `width`s, then add\n   `table-layout: fixed;` to your CSS for the appropriate `<table>`, or\n2. Wrap the contents of all cells in the column with a `<div>` (using a\n   `cellTemplate` or `formatter`), assign the div's style `width`, then assign\n   the column `width` or add a CSS `width` to the column class created by\n   DataTable.\n\n<pre><code>.yui3-datatable .yui3-datatable-col-foo {\n    padding: 0;\n    width: 125px;\n}\n.yui3-datatable .yui3-datatable-col-foo .yui3-datatable-liner {\n    overflow: hidden;\n    padding: 4px 10px;\n    width: 125px;\n}\n</pre></code>\n\n<pre><code>var table = new Y.DataTable({\n    columns: [\n        {\n            key: 'foo',\n            cellTemplate:\n                '&lt;td class=\"{className}\">' +\n                    '&lt;div class=\"yui3-datatable-liner\">{content}&lt;/div>' +\n                '&lt;/td>'\n        },\n        ...\n    ],\n    ...\n});\n</code></pre>\n\nTo add a liner to all columns, either provide a custom `bodyView` to the\nDataTable constructor or update the default `bodyView`'s `CELL_TEMPLATE` like\nso:\n\n<pre><code>table.on('renderBody', function (e) {\n    e.view.CELL_TEMPLATE = e.view.CELL_TEMPLATE.replace(/\\{content\\}/,\n            '&lt;div class=\"yui3-datatable-liner\">{content}&lt;/div>');\n});\n</code></pre>\n\nKeep in mind that DataTable skins apply cell `padding`, so assign your CSS\n`width`s accordingly or override the `padding` style for that column's `<td>`s\nto 0, and add `padding` to the liner `<div>`'s styles as shown above.",
            "since": "3.5.0"
        },
        "DataTable.Core": {
            "name": "DataTable.Core",
            "shortname": "DataTable.Core",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "DataTable.Base"
            ],
            "module": "datatable",
            "submodule": "datatable-core",
            "namespace": "",
            "file": "src/datatable/js/core.js",
            "line": 24,
            "description": "_API docs for this extension are included in the DataTable class._\n\nClass extension providing the core API and structure for the DataTable Widget.\n\nUse this class extension with Widget or another Base-based superclass to create\nthe basic DataTable model API and composing class structure.",
            "since": "3.5.0"
        },
        "Plugin.DataTableDataSource": {
            "name": "Plugin.DataTableDataSource",
            "shortname": "Plugin.DataTableDataSource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatable",
            "submodule": "datatable-datasource",
            "namespace": "",
            "file": "src/datatable/js/datatable-datasource.js",
            "line": 8,
            "description": "Adds DataSource integration to DataTable.",
            "extends": "Plugin.Base"
        },
        "DataTable.HeaderView": {
            "name": "DataTable.HeaderView",
            "shortname": "DataTable.HeaderView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatable",
            "submodule": "datatable-head",
            "namespace": "DataTable",
            "file": "src/datatable/js/head.js",
            "line": 14,
            "description": "View class responsible for rendering the `<thead>` section of a table. Used as\nthe default `headerView` for `Y.DataTable.Base` and `Y.DataTable` classes.\n\nTranslates the provided array of column configuration objects into a rendered\n`<thead>` based on the data in those objects.\n    \n\nThe structure of the column data is expected to be a single array of objects,\nwhere each object corresponds to a `<th>`.  Those objects may contain a\n`children` property containing a similarly structured array to indicate the\nnested cells should be grouped under the parent column's colspan in a separate\nrow of header cells. E.g.\n\n<pre><code>\nnew Y.DataTable.HeaderView({\n  container: tableNode,\n  columns: [\n    { key: 'id' }, // no nesting\n    { key: 'name', children: [\n      { key: 'firstName', label: 'First' },\n      { key: 'lastName',  label: 'Last' } ] }\n  ]\n}).render();\n</code></pre>\n\nThis would translate to the following visualization:\n\n<pre>\n---------------------\n|    |     name     |\n|    |---------------\n| id | First | Last |\n---------------------\n</pre>\n\nSupported properties of the column objects include:\n\n  * `label`     - The HTML content of the header cell.\n  * `key`       - If `label` is not specified, the `key` is used for content.\n  * `children`  - Array of columns to appear below this column in the next\n                  row.\n  * `headerTemplate` - Overrides the instance's `CELL_TEMPLATE` for cells in this\n    column only.\n  * `abbr`      - The content of the 'abbr' attribute of the `<th>`\n  * `title`     - The content of the 'title' attribute of the `<th>`\n  * `className` - Adds this string of CSS classes to the column header\n\nThrough the life of instantiation and rendering, the column objects will have\nthe following properties added to them:\n\n  * `id`       - (Defaulted by DataTable) The id to assign the rendered column\n  * `_colspan` - To supply the `<th>` attribute\n  * `_rowspan` - To supply the `<th>` attribute\n  * `_parent`  - (Added by DataTable) If the column is a child of another\n    column, this points to its parent column\n\nThe column object is also used to provide values for {placeholder} tokens in the\ninstance's `CELL_TEMPLATE`, so you can modify the template and include other\ncolumn object properties to populate them.",
            "extends": "View",
            "since": "3.5.0"
        },
        "DataTable.Message": {
            "name": "DataTable.Message",
            "shortname": "DataTable.Message",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatable",
            "submodule": "datatable-message",
            "namespace": "",
            "file": "src/datatable/js/message.js",
            "line": 12,
            "description": "_API docs for this extension are included in the DataTable class._\n\nAdds support for a message container to appear in the table.  This can be used\nto indicate loading progress, lack of records, or any other communication\nneeded.\n\nFeatures added to `Y.DataTable`, and made available for custom classes at\n`Y.DataTable.Message`.",
            "since": "3.5.0"
        },
        "DataTable.Mutable": {
            "name": "DataTable.Mutable",
            "shortname": "DataTable.Mutable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatable",
            "submodule": "datatable-mutable",
            "namespace": "",
            "file": "src/datatable/js/mutable.js",
            "line": 17,
            "description": "_API docs for this extension are included in the DataTable class._\n\nClass extension to add mutation convenience methods to `Y.DataTable` (or other\nbuilt class).\n\nColumn mutation methods are paired with new custom events:\n\n * addColumn\n * removeColumn\n * modifyColumn\n * moveColumn\n\nRow mutation events are bubbled from the DataTable's `data` ModelList through\nthe DataTable instance.",
            "since": "3.5.0"
        },
        "DataTable.Scrollable": {
            "name": "DataTable.Scrollable",
            "shortname": "DataTable.Scrollable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatable-scroll",
            "namespace": "",
            "file": "src/datatable/js/scroll.js",
            "line": 21,
            "description": "_API docs for this extension are included in the DataTable class._\n\nAdds the ability to make the table rows scrollable while preserving the header\nplacement.\n\nThere are two types of scrolling, horizontal (x) and vertical (y).  Horizontal\nscrolling is achieved by wrapping the entire table in a scrollable container.\nVertical scrolling is achieved by splitting the table headers and data into two\nseparate tables, the latter of which is wrapped in a vertically scrolling\ncontainer.  In this case, column widths of header cells and data cells are kept\nin sync programmatically.\n\nSince the split table synchronization can be costly at runtime, the split is only done if the data in the table stretches beyond the configured `height` value.\n\nTo activate or deactivate scrolling, set the `scrollable` attribute to one of\nthe following values:\n\n * `false` - (default) Scrolling is disabled.\n * `true` or 'xy' - If `height` is set, vertical scrolling will be activated, if\n            `width` is set, horizontal scrolling will be activated.\n * 'x' - Activate horizontal scrolling only. Requires the `width` attribute is\n         also set.\n * 'y' - Activate vertical scrolling only. Requires the `height` attribute is\n         also set.",
            "since": "3.5.0"
        },
        "DataTable.Sortable": {
            "name": "DataTable.Sortable",
            "shortname": "DataTable.Sortable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatable",
            "submodule": "datatable-sort",
            "namespace": "",
            "file": "src/datatable/js/sort.js",
            "line": 26,
            "description": "_API docs for this extension are included in the DataTable class._\n\nThis DataTable class extension adds support for sorting the table data by API\nmethods `table.sort(...)` or `table.toggleSort(...)` or by clicking on column\nheaders in the rendered UI.\n\nSorting by the API is enabled automatically when this module is `use()`d.  To\nenable UI triggered sorting, set the DataTable's `sortable` attribute to\n`true`.\n\n<pre><code>\nvar table = new Y.DataTable({\n    columns: [ 'id', 'username', 'name', 'birthdate' ],\n    data: [ ... ],\n    sortable: true\n});\n\ntable.render('#table');\n</code></pre>\n\nSetting `sortable` to `true` will enable UI sorting for all columns.  To enable\nUI sorting for certain columns only, set `sortable` to an array of column keys,\nor just add `sortable: true` to the respective column configuration objects.\nThis uses the default setting of `sortable: auto` for the DataTable instance.\n\n<pre><code>\nvar table = new Y.DataTable({\n    columns: [\n        'id',\n        { key: 'username',  sortable: true },\n        { key: 'name',      sortable: true },\n        { key: 'birthdate', sortable: true }\n    ],\n    data: [ ... ]\n    // sortable: 'auto' is the default\n});\n\n// OR\nvar table = new Y.DataTable({\n    columns: [ 'id', 'username', 'name', 'birthdate' ],\n    data: [ ... ],\n    sortable: [ 'username', 'name', 'birthdate' ]\n});\n</code></pre>\n\nTo disable UI sorting for all columns, set `sortable` to `false`.  This still\npermits sorting via the API methods.\n\nAs new records are inserted into the table's `data` ModelList, they will be inserted at the correct index to preserve the sort order.\n\nThe current sort order is stored in the `sortBy` attribute.  Assigning this value at instantiation will automatically sort your data.\n\nSorting is done by a simple value comparison using &lt; and &gt; on the field\nvalue.  If you need custom sorting, add a sort function in the column's\n`sortFn` property.  Columns whose content is generated by formatters, but don't\nrelate to a single `key`, require a `sortFn` to be sortable.\n\n<pre><code>\nfunction nameSort(a, b, desc) {\n    var aa = a.get('lastName') + a.get('firstName'),\n        bb = a.get('lastName') + b.get('firstName'),\n        order = (aa > bb) ? 1 : -(aa < bb);\n        \n    return desc ? -order : order;\n}\n\nvar table = new Y.DataTable({\n    columns: [ 'id', 'username', { key: name, sortFn: nameSort }, 'birthdate' ],\n    data: [ ... ],\n    sortable: [ 'username', 'name', 'birthdate' ]\n});\n</code></pre>\n\nSee the user guide for more details.",
            "since": "3.5.0"
        },
        "DataTable.TableView": {
            "name": "DataTable.TableView",
            "shortname": "DataTable.TableView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatable",
            "submodule": "datatable-table",
            "namespace": "DataTable",
            "file": "src/datatable/js/table.js",
            "line": 16,
            "description": "View class responsible for rendering a `<table>` from provided data.  Used as\nthe default `view` for `Y.DataTable.Base` and `Y.DataTable` classes.",
            "extends": "View",
            "since": "3.6.0"
        },
        "Date": {
            "name": "Date",
            "shortname": "Date",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatype-date",
            "submodule": "datatype-date-format",
            "namespace": "",
            "file": "src/date/js/date-format.js",
            "line": 34,
            "description": "Date provides a set of utility functions to operate against Date objects.",
            "static": 1
        },
        "Number": {
            "name": "Number",
            "shortname": "Number",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatype-number",
            "submodule": "datatype-number-format",
            "namespace": "",
            "file": "src/number/js/number-format.js",
            "line": 16,
            "description": "Number provides a set of utility functions to operate against Number objects.",
            "static": 1
        },
        "XML": {
            "name": "XML",
            "shortname": "XML",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "datatype-xml",
            "submodule": "datatype-xml-format",
            "namespace": "",
            "file": "src/xml/js/xml-format.js",
            "line": 9,
            "description": "XML provides a set of utility functions to operate against XML documents.",
            "static": 1
        },
        "Plugin.DDConstrained": {
            "name": "Plugin.DDConstrained",
            "shortname": "Plugin.DDConstrained",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dd",
            "submodule": "dd-constrain",
            "namespace": "Plugin",
            "file": "src/dd/js/constrain.js",
            "line": 12,
            "description": "Plugin for the dd-drag module to add the constraining methods to it.\nIt supports constraining to a node or viewport. It supports tick based moves and XY axis constraints.",
            "extends": "Base",
            "is_constructor": 1
        },
        "DD.DDM": {
            "name": "DD.DDM",
            "shortname": "DDM",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dd",
            "submodule": "dd-ddm-base",
            "namespace": "DD",
            "file": "src/dd/js/ddm-base.js",
            "line": 7,
            "description": "Provides the base Drag Drop Manger required for making a Node draggable.",
            "extends": "Base",
            "is_constructor": 1
        },
        "DD.Delegate": {
            "name": "DD.Delegate",
            "shortname": "DD.Delegate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dd",
            "submodule": "dd-delegate",
            "namespace": "DD",
            "file": "src/dd/js/delegate.js",
            "line": 7,
            "description": "Provides the ability to drag multiple nodes under a container element using only one Y.DD.Drag instance as a delegate.",
            "extends": "Base",
            "is_constructor": 1
        },
        "DD.Drag": {
            "name": "DD.Drag",
            "shortname": "DD.Drag",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dd",
            "submodule": "dd-drag",
            "namespace": "DD",
            "file": "src/dd/js/drag.js",
            "line": 7,
            "description": "Provides the ability to drag a Node.",
            "extends": "Base",
            "is_constructor": 1
        },
        "DD.Drop": {
            "name": "DD.Drop",
            "shortname": "DD.Drop",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dd",
            "submodule": "dd-drop",
            "namespace": "DD",
            "file": "src/dd/js/drop.js",
            "line": 7,
            "description": "Provides the ability to create a Drop Target.",
            "extends": "Base",
            "is_constructor": 1
        },
        "Plugin.Drop": {
            "name": "Plugin.Drop",
            "shortname": "Plugin.Drop",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dd",
            "submodule": "dd-drop-plugin",
            "namespace": "Plugin",
            "file": "src/dd/js/dd-drop-plugin.js",
            "line": 7,
            "description": "Simple Drop plugin that can be attached to a Node via the plug method.",
            "extends": "DD.Drop",
            "is_constructor": 1
        },
        "Plugin.Drag": {
            "name": "Plugin.Drag",
            "shortname": "Plugin.Drag",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dd",
            "submodule": "dd-plugin",
            "namespace": "Plugin",
            "file": "src/dd/js/dd-plugin.js",
            "line": 8,
            "description": "Simple Drag plugin that can be attached to a Node or Widget via the plug method.",
            "extends": "DD.Drag",
            "is_constructor": 1
        },
        "Plugin.DDProxy": {
            "name": "Plugin.DDProxy",
            "shortname": "Plugin.DDProxy",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dd",
            "submodule": "dd-proxy",
            "namespace": "Plugin",
            "file": "src/dd/js/proxy.js",
            "line": 7,
            "description": "Plugin for dd-drag for creating a proxy drag node, instead of dragging the original node.",
            "extends": "Base",
            "is_constructor": 1
        },
        "DD.Scroll": {
            "name": "DD.Scroll",
            "shortname": "DD.Scroll",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dd",
            "submodule": "dd-scroll",
            "namespace": "DD",
            "file": "src/dd/js/scroll.js",
            "line": 8,
            "description": "Base scroller class used to create the Plugin.DDNodeScroll and Plugin.DDWinScroll.\nThis class should not be called on it's own, it's designed to be a plugin.",
            "extends": "Base",
            "is_constructor": 1
        },
        "Plugin.DDWindowScroll": {
            "name": "Plugin.DDWindowScroll",
            "shortname": "Plugin.DDWindowScroll",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dd",
            "submodule": "dd-scroll",
            "namespace": "Plugin",
            "file": "src/dd/js/scroll.js",
            "line": 320,
            "description": "Extends the Scroll class to make the window scroll while dragging.",
            "extends": "Scroll",
            "is_constructor": 1
        },
        "Plugin.DDNodeScroll": {
            "name": "Plugin.DDNodeScroll",
            "shortname": "Plugin.DDNodeScroll",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dd",
            "submodule": "dd-scroll",
            "namespace": "Plugin",
            "file": "src/dd/js/scroll.js",
            "line": 365,
            "description": "Extends the Scroll class to make a parent node scroll while dragging.",
            "extends": "Scroll",
            "is_constructor": 1
        },
        "Dial": {
            "name": "Dial",
            "shortname": "Dial",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dial",
            "namespace": "",
            "file": "src/dial/js/Dial.js",
            "line": 18,
            "description": "Create a dial to represent an input control capable of representing a\nseries of intermediate states based on the position of the Dial's handle.\nThese states are typically aligned to a value algorithm whereby the angle of the handle's\nposition corresponds to a given value.",
            "extends": "Widget",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "DOM": {
            "name": "DOM",
            "shortname": "DOM",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dom",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 6637,
            "description": "Provides DOM helper methods.",
            "submodule": "selector-native"
        },
        "YUI": {
            "name": "YUI",
            "shortname": "YUI",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "yui",
            "namespace": "",
            "submodule": "yui-base",
            "file": "src/yui/js/yui.js",
            "line": 15,
            "description": "The YUI global namespace object. This is the constructor for all YUI instances.\n\nThis is a self-instantiable factory function, meaning you don't need to precede\nit with the `new` operator. You can invoke it directly like this:\n\n    YUI().use('*', function (Y) {\n        // Y is a new YUI instance.\n    });\n\nBut it also works like this:\n\n    var Y = YUI();\n\nThe `YUI` constructor accepts an optional config object, like this:\n\n    YUI({\n        debug: true,\n        combine: false\n    }).use('node', function (Y) {\n        // Y.Node is ready to use.\n    });\n\nSee the API docs for the <a href=\"config.html\">Config</a> class for the complete\nlist of supported configuration properties accepted by the YUI constuctor.\n\nIf a global `YUI` object is already defined, the existing YUI object will not be\noverwritten, to ensure that defined namespaces are preserved.\n\nEach YUI instance has full custom event support, but only if the event system is\navailable.",
            "uses": [
                "EventTarget"
            ],
            "is_constructor": 1,
            "global": "",
            "params": [
                {
                    "name": "config",
                    "description": "Zero or more optional configuration objects. Config\n    values are stored in the `Y.config` property. See the\n    <a href=\"config.html\">Config</a> docs for the list of supported properties.",
                    "type": "Object",
                    "optional": true,
                    "multiple": true
                }
            ]
        },
        "EditorBase": {
            "name": "EditorBase",
            "shortname": "EditorBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "editor",
            "namespace": "",
            "file": "src/editor/js/editor-base.js",
            "line": 2,
            "description": "Base class for Editor. Handles the business logic of Editor, no GUI involved only utility methods and events.\n\n     var editor = new Y.EditorBase({\n         content: 'Foo'\n     });\n     editor.render('#demo');",
            "submodule": "editor-base",
            "extends": "Base",
            "mainName": "editor",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "is_constructor": 1
        },
        "Plugin.EditorBidi": {
            "name": "Plugin.EditorBidi",
            "shortname": "Plugin.EditorBidi",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "editor",
            "namespace": "",
            "file": "src/editor/js/editor-bidi.js",
            "line": 2,
            "description": "Plugin for Editor to support BiDirectional (bidi) text operations.",
            "submodule": "editor-bidi",
            "extends": "Base",
            "is_constructor": 1
        },
        "Plugin.ExecCommand": {
            "name": "Plugin.ExecCommand",
            "shortname": "Plugin.ExecCommand",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "editor",
            "submodule": "exec-command",
            "namespace": "",
            "file": "src/editor/js/exec-command.js",
            "line": 2,
            "description": "Plugin for the frame module to handle execCommands for Editor",
            "extends": "Base",
            "is_constructor": 1
        },
        "Plugin.EditorBR": {
            "name": "Plugin.EditorBR",
            "shortname": "Plugin.EditorBR",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "editor",
            "namespace": "",
            "file": "src/editor/js/editor-br.js",
            "line": 3,
            "description": "Plugin for Editor to normalize BR's.",
            "submodule": "editor-br",
            "extends": "Base",
            "is_constructor": 1
        },
        "Plugin.EditorLists": {
            "name": "Plugin.EditorLists",
            "shortname": "Plugin.EditorLists",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "editor",
            "namespace": "",
            "file": "src/editor/js/lists.js",
            "line": 2,
            "description": "Handles list manipulation inside the Editor. Adds keyboard manipulation and execCommand support.\nAdds overrides for the <a href=\"Plugin.ExecCommand.html#method_COMMANDS.insertorderedlist\">insertorderedlist</a>\nand <a href=\"Plugin.ExecCommand.html#method_COMMANDS.insertunorderedlist\">insertunorderedlist</a> execCommands.",
            "submodule": "editor-lists",
            "is_constructor": 1,
            "extends": "Base"
        },
        "Plugin.EditorPara": {
            "name": "Plugin.EditorPara",
            "shortname": "Plugin.EditorPara",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "editor",
            "namespace": "",
            "file": "src/editor/js/editor-para.js",
            "line": 2,
            "description": "Plugin for Editor to paragraph auto wrapping and correction.",
            "submodule": "editor-para",
            "extends": "Plugin.EditorParaBase",
            "is_constructor": 1
        },
        "Plugin.EditorParaBase": {
            "name": "Plugin.EditorParaBase",
            "shortname": "Plugin.EditorParaBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "editor",
            "namespace": "",
            "file": "src/editor/js/editor-para-base.js",
            "line": 2,
            "description": "Base Plugin for Editor to paragraph auto wrapping and correction.",
            "submodule": "editor-para-base",
            "extends": "Base",
            "is_constructor": 1
        },
        "Plugin.EditorParaIE": {
            "name": "Plugin.EditorParaIE",
            "shortname": "Plugin.EditorParaIE",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "editor",
            "namespace": "",
            "file": "src/editor/js/editor-para-ie.js",
            "line": 2,
            "description": "Extends EditorParaBase with IE support",
            "submodule": "editor-para-ie",
            "extends": "Plugin.EditorParaBase",
            "is_constructor": 1
        },
        "EditorSelection": {
            "name": "EditorSelection",
            "shortname": "EditorSelection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "editor",
            "namespace": "",
            "file": "src/editor/js/editor-selection.js",
            "line": 1,
            "description": "Wraps some common Selection/Range functionality into a simple object",
            "submodule": "selection",
            "is_constructor": 1
        },
        "Plugin.EditorTab": {
            "name": "Plugin.EditorTab",
            "shortname": "Plugin.EditorTab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "editor",
            "namespace": "",
            "file": "src/editor/js/editor-tab.js",
            "line": 2,
            "description": "Handles tab and shift-tab indent/outdent support.",
            "submodule": "editor-tab",
            "is_constructor": 1,
            "extends": "Base"
        },
        "Escape": {
            "name": "Escape",
            "shortname": "Escape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "escape",
            "namespace": "",
            "file": "src/escape/js/escape.js",
            "line": 1,
            "description": "Provides utility methods for escaping strings."
        },
        "DOMEventFacade": {
            "name": "DOMEventFacade",
            "shortname": "DOMEventFacade",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event",
            "submodule": "event-base",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 14951,
            "description": "Wraps a DOM event, properties requiring browser abstraction are\nfixed here.  Provids a security layer when required.",
            "params": [
                {
                    "name": "ev",
                    "description": "the DOM event",
                    "type": "Event"
                },
                {
                    "name": "currentTarget",
                    "description": "the element the listener was attached to",
                    "type": "HTMLElement"
                },
                {
                    "name": "wrapper",
                    "description": "the custom event wrapper for this DOM event",
                    "type": "Event.Custom"
                }
            ]
        },
        "Event": {
            "name": "Event",
            "shortname": "Event",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event",
            "submodule": "event-base",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 15279,
            "description": "The event utility provides functions to add and remove event listeners,\nevent cleansing.  It also tries to automatically remove listeners it\nregisters during the unload event.",
            "static": 1
        },
        "Do": {
            "name": "Do",
            "shortname": "Do",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event-custom",
            "submodule": "event-custom-base",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 9333,
            "description": "Allows for the insertion of methods that are executed before or after\na specified method",
            "static": 1
        },
        "Do.Method": {
            "name": "Do.Method",
            "shortname": "Do.Method",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event-custom",
            "submodule": "event-custom-base",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 9520,
            "description": "Wrapper for a displaced method with aop enabled",
            "is_constructor": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "The object to operate on"
                },
                {
                    "name": "sFn",
                    "description": "The name of the method to displace"
                }
            ]
        },
        "Do.AlterArgs": {
            "name": "Do.AlterArgs",
            "shortname": "Do.AlterArgs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event-custom",
            "submodule": "event-custom-base",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 9634,
            "description": "Return an AlterArgs object when you want to change the arguments that\nwere passed into the function.  Useful for Do.before subscribers.  An\nexample would be a service that scrubs out illegal characters prior to\nexecuting the core business logic.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "msg",
                    "description": "(optional) Explanation of the altered return value",
                    "type": "String"
                },
                {
                    "name": "newArgs",
                    "description": "Call parameters to be used for the original method\n                       instead of the arguments originally passed in.",
                    "type": "Array"
                }
            ]
        },
        "Do.AlterReturn": {
            "name": "Do.AlterReturn",
            "shortname": "Do.AlterReturn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event-custom",
            "submodule": "event-custom-base",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 9650,
            "description": "Return an AlterReturn object when you want to change the result returned\nfrom the core method to the caller.  Useful for Do.after subscribers.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "msg",
                    "description": "(optional) Explanation of the altered return value",
                    "type": "String"
                },
                {
                    "name": "newRetVal",
                    "description": "Return value passed to code that invoked the wrapped\n                     function.",
                    "type": "Any"
                }
            ]
        },
        "Do.Halt": {
            "name": "Do.Halt",
            "shortname": "Do.Halt",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event-custom",
            "submodule": "event-custom-base",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 9664,
            "description": "Return a Halt object when you want to terminate the execution\nof all subsequent subscribers as well as the wrapped method\nif it has not exectued yet.  Useful for Do.before subscribers.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "msg",
                    "description": "(optional) Explanation of why the termination was done",
                    "type": "String"
                },
                {
                    "name": "retVal",
                    "description": "Return value passed to code that invoked the wrapped\n                     function.",
                    "type": "Any"
                }
            ]
        },
        "Do.Prevent": {
            "name": "Do.Prevent",
            "shortname": "Do.Prevent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event-custom",
            "submodule": "event-custom-base",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 9679,
            "description": "Return a Prevent object when you want to prevent the wrapped function\nfrom executing, but want the remaining listeners to execute.  Useful\nfor Do.before subscribers.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "msg",
                    "description": "(optional) Explanation of why the termination was done",
                    "type": "String"
                }
            ]
        },
        "Do.Error": {
            "name": "Do.Error",
            "shortname": "Do.Error",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event-custom",
            "submodule": "event-custom-base",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 9691,
            "description": "Return an Error object when you want to terminate the execution\nof all subsequent method calls.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "msg",
                    "description": "(optional) Explanation of the altered return value",
                    "type": "String"
                },
                {
                    "name": "retVal",
                    "description": "Return value passed to code that invoked the wrapped\n                     function.",
                    "type": "Any"
                }
            ],
            "deprecated": true,
            "deprecationMessage": "use Y.Do.Halt or Y.Do.Prevent"
        },
        "CustomEvent": {
            "name": "CustomEvent",
            "shortname": "CustomEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event-custom",
            "submodule": "event-custom-base",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 9763,
            "description": "The CustomEvent class lets you define events for your application\nthat can be subscribed to by one or more independent component.",
            "params": [
                {
                    "name": "type",
                    "description": "The type of event, which is passed to the callback\nwhen the event fires.",
                    "type": "String"
                },
                {
                    "name": "o",
                    "description": "configuration object.",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "Subscriber": {
            "name": "Subscriber",
            "shortname": "Subscriber",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event-custom",
            "submodule": "event-custom-base",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 10463,
            "description": "Stores the subscriber information to be used when the event fires.",
            "params": [
                {
                    "name": "fn",
                    "description": "The wrapped function to execute.",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "The value of the keyword 'this' in the listener.",
                    "type": "Object"
                },
                {
                    "name": "args",
                    "description": "0..n additional arguments to supply the listener.",
                    "type": "Array",
                    "multiple": true
                }
            ],
            "is_constructor": 1
        },
        "EventHandle": {
            "name": "EventHandle",
            "shortname": "EventHandle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event-custom",
            "submodule": "event-custom-base",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 10609,
            "description": "Return value from all subscribe operations",
            "is_constructor": 1,
            "params": [
                {
                    "name": "evt",
                    "description": "the custom event.",
                    "type": "CustomEvent"
                },
                {
                    "name": "sub",
                    "description": "the subscriber.",
                    "type": "Subscriber"
                }
            ]
        },
        "EventTarget": {
            "name": "EventTarget",
            "shortname": "EventTarget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Attribute",
                "AttributeObservable",
                "AttributeEvents",
                "Base",
                "BaseObservable",
                "YUI",
                "Intl",
                "Node"
            ],
            "module": "node",
            "submodule": "node-core",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 10688,
            "description": "EventTarget provides the implementation for any object to\npublish, subscribe and fire to custom events, and also\nalows other EventTargets to target the object with events\nsourced from the other object.\nEventTarget is designed to be used with Y.augment to wrap\nEventCustom in an interface that allows events to be listened to\nand fired by name.  This makes it possible for implementing code to\nsubscribe to an event that either has not been created yet, or will\nnot be created at all.",
            "params": [
                {
                    "name": "opts",
                    "description": "a configuration object"
                }
            ],
            "itemtype": "config",
            "type": "Boolean"
        },
        "EventFacade": {
            "name": "EventFacade",
            "shortname": "EventFacade",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event-custom",
            "submodule": "event-custom-complex",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 11652,
            "description": "Wraps and protects a custom event for use when emitFacade is set to true.\nRequires the event-custom-complex module",
            "params": [
                {
                    "name": "e",
                    "description": "the custom event",
                    "type": "Event"
                },
                {
                    "name": "currentTarget",
                    "description": "the element the listener was attached to",
                    "type": "HTMLElement"
                }
            ]
        },
        "SyntheticEvent.Notifier": {
            "name": "SyntheticEvent.Notifier",
            "shortname": "SyntheticEvent.Notifier",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event",
            "submodule": "event-synthetic",
            "namespace": "",
            "file": "src/event/js/synthetic.js",
            "line": 17,
            "description": "<p>The triggering mechanism used by SyntheticEvents.</p>\n\n<p>Implementers should not instantiate these directly.  Use the Notifier\nprovided to the event's implemented <code>on(node, sub, notifier)</code> or\n<code>delegate(node, sub, notifier, filter)</code> methods.</p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "handle",
                    "description": "the detach handle for the subscription to an\n             internal custom event used to execute the callback passed to\n             on(..) or delegate(..)",
                    "type": "EventHandle"
                },
                {
                    "name": "emitFacade",
                    "description": "take steps to ensure the first arg received by\n             the subscription callback is an event facade",
                    "type": "Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "3.2.0"
        },
        "SynthRegistry": {
            "name": "SynthRegistry",
            "shortname": "SynthRegistry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event",
            "submodule": "event-synthetic",
            "namespace": "",
            "file": "src/event/js/synthetic.js",
            "line": 105,
            "description": "Manager object for synthetic event subscriptions to aggregate multiple synths on the same node without colliding with actual DOM subscription entries in the global map of DOM subscriptions.  Also facilitates proper cleanup on page unload.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "el",
                    "description": "the DOM element",
                    "type": "HTMLElement"
                },
                {
                    "name": "yuid",
                    "description": "the yuid stamp for the element",
                    "type": "String"
                },
                {
                    "name": "key",
                    "description": "the generated id token used to identify an event type +\n                    element in the global DOM subscription map.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": ""
        },
        "SyntheticEvent": {
            "name": "SyntheticEvent",
            "shortname": "SyntheticEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event",
            "submodule": "event-synthetic",
            "namespace": "",
            "file": "src/event/js/synthetic.js",
            "line": 194,
            "description": "<p>Wrapper class for the integration of new events into the YUI event\ninfrastructure.  Don't instantiate this object directly, use\n<code>Y.Event.define(type, config)</code>.  See that method for details.</p>\n\n<p>Properties that MAY or SHOULD be specified in the configuration are noted\nbelow and in the description of <code>Y.Event.define</code>.</p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Implementation pieces and configuration",
                    "type": "Object"
                }
            ],
            "since": "3.1.0",
            "in": "event-synthetic"
        },
        "ValueChange": {
            "name": "ValueChange",
            "shortname": "ValueChange",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event-valuechange",
            "namespace": "",
            "file": "src/event-valuechange/js/event-valuechange.js",
            "line": 18,
            "description": "Provides the implementation for the synthetic `valuechange` event. This class\nisn't meant to be used directly, but is public to make monkeypatching possible.\n\nUsage:\n\n    YUI().use('event-valuechange', function (Y) {\n        Y.one('#my-input').on('valuechange', function (e) {\n            Y.log('previous value: ' + e.prevVal);\n            Y.log('new value: ' + e.newVal);\n        });\n    });",
            "static": 1
        },
        "Features": {
            "name": "Features",
            "shortname": "Features",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "features",
            "namespace": "",
            "file": "src/yui/js/features.js",
            "line": 8,
            "description": "Feature detection",
            "static": 1,
            "submodule": "dom-base"
        },
        "File": {
            "name": "File",
            "shortname": "File",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "file",
            "namespace": "",
            "file": "src/file/js/file.js",
            "line": 10,
            "description": "`Y.File` serves as an alias for either <a href=\"FileFlash.html\">`Y.FileFlash`</a>\nor <a href=\"FileHTML5.html\">`Y.FileHTML5`</a>, depending on the feature set available\nin a specific browser."
        },
        "FileFlash": {
            "name": "FileFlash",
            "shortname": "FileFlash",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "file-flash",
            "namespace": "",
            "file": "src/file/js/file-flash.js",
            "line": 6,
            "description": "The class provides a wrapper for a file pointer in Flash.",
            "extends": "Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "FileHTML5": {
            "name": "FileHTML5",
            "shortname": "FileHTML5",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "file-html5",
            "namespace": "",
            "file": "src/file/js/file-html5.js",
            "line": 7,
            "description": "The class provides a wrapper for a file pointer.",
            "extends": "Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "Frame": {
            "name": "Frame",
            "shortname": "Frame",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "editor",
            "namespace": "",
            "file": "src/editor/js/frame.js",
            "line": 2,
            "description": "Creates a wrapper around an iframe. It loads the content either from a local\nfile or from script and creates a local YUI instance bound to that new window and document.",
            "submodule": "frame",
            "extends": "Base",
            "is_constructor": 1
        },
        "Get": {
            "name": "Get",
            "shortname": "Get",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "get",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 3943,
            "description": "Provides dynamic loading of remote JavaScript and CSS resources."
        },
        "Get.Transaction": {
            "name": "Get.Transaction",
            "shortname": "Get.Transaction",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "features",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 4663,
            "description": "Represents a Get transaction, which may contain requests for one or more JS or\nCSS files.\n\nThis class should not be instantiated manually. Instances will be created and\nreturned as needed by Y.Get's `css()`, `js()`, and `load()` methods.",
            "is_constructor": 1,
            "since": "3.5.0"
        },
        "GetNodeJS": {
            "name": "GetNodeJS",
            "shortname": "GetNodeJS",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "get-nodejs",
            "namespace": "",
            "file": "src/get/js/get-nodejs.js",
            "line": 1,
            "description": "NodeJS specific Get module used to load remote resources. It contains the same signature as the default Get module so there is no code change needed."
        },
        "AttributeLite": {
            "name": "AttributeLite",
            "shortname": "AttributeLite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/GraphicBase.js",
            "line": 41,
            "description": "AttributeLite provides Attribute-like getters and setters for shape classes in the Graphics module.\nIt provides a get/set API without the event infastructure. This class is temporary and a work in progress.",
            "is_constructor": 1
        },
        "GraphicBase": {
            "name": "GraphicBase",
            "shortname": "GraphicBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/GraphicBase.js",
            "line": 225,
            "description": "GraphicBase serves as the base class for the graphic layer. It serves the same purpose as\nBase but uses a lightweight getter/setter class instead of Attribute.\nThis class is temporary and a work in progress.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "Key value pairs for attributes",
                    "type": "Object"
                }
            ]
        },
        "Drawing": {
            "name": "Drawing",
            "shortname": "Drawing",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Path"
            ],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/GraphicBase.js",
            "line": 296,
            "description": "`Drawing` provides a set of drawing methods used by `Path` and custom shape classes.\n`Drawing` has the following implementations based on browser capability.\n <ul>\n     <li><a href=\"SVGDrawing.html\">`SVGDrawing`</a></li>\n     <li><a href=\"VMLDrawing.html\">`VMLDrawing`</a></li>\n     <li><a href=\"CanvasDrawing.html\">`CanvasDrawing`</a></li>\n </ul>",
            "is_constructor": 1
        },
        "Shape": {
            "name": "Shape",
            "shortname": "Shape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/GraphicBase.js",
            "line": 372,
            "description": "<p>Base class for creating shapes.</p>\n<p>`Shape` is an abstract class and is not meant to be used directly. The following classes extend\n`Shape`.\n\n<ul>\n    <li><a href=\"Circle.html\">`Circle`</a></li>\n    <li><a href=\"Ellipse.html\">`Ellipse`</a></li>\n    <li><a href=\"Rect.html\">`Rect`</a></li>\n    <li><a href=\"Path.html\">`Path`</a></li>\n</ul>\n\n `Shape` can also be extended to create custom shape classes.</p>\n\n `Shape` has the following implementations based on browser capability.\n<ul>\n    <li><a href=\"SVGShape.html\">`SVGShape`</a></li>\n    <li><a href=\"VMLShape.html\">`VMLShape`</a></li>\n    <li><a href=\"CanvasShape.html\">`CanvasShape`</a></li>\n</ul>\n\n It is not necessary to interact with these classes directly. `Shape` will point to the appropriate implemention.</p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cfg",
                    "description": "(optional) Attribute configs",
                    "type": "Object"
                }
            ]
        },
        "Circle": {
            "name": "Circle",
            "shortname": "Circle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/GraphicBase.js",
            "line": 702,
            "description": "<p>Creates circle shape with editable attributes.</p>\n<p>`Circle` instances can be created using the <a href=\"Graphic.html#method_addShape\">`addShape`</a> method of the\n<a href=\"Graphic.html\">`Graphic`</a> class. The method's `cfg` argument contains a `type` attribute. Assigning \"circle\"\nor `Y.Circle` to this attribute will create a `Circle` instance. Required attributes for instantiating a `Circle` are\n`type` and `radius`. Optional attributes include:\n <ul>\n     <li><a href=\"#attr_fill\">fill</a></li>\n     <li><a href=\"#attr_id\">id</a></li>\n     <li><a href=\"#attr_stroke\">stroke</a></li>\n     <li><a href=\"#attr_transform\">transform</a></li>\n     <li><a href=\"#attr_transformOrigin\">transformOrigin</a></li>\n     <li><a href=\"#attr_visible\">visible</a></li>\n     <li><a href=\"#attr_x\">x</a></li>\n     <li><a href=\"#attr_y\">y</a></li>\n </ul>\n\nThe below code creates a circle by defining the `type` attribute as \"circle\":</p>\n\n       var myCircle = myGraphic.addShape({\n           type: \"circle\",\n           radius: 10,\n           fill: {\n               color: \"#9aa\"\n           },\n           stroke: {\n               weight: 1,\n               color: \"#000\"\n           }\n       });\n\nBelow, this same circle is created by defining the `type` attribute with a class reference:\n\n       var myCircle = myGraphic.addShape({\n           type: Y.Circle,\n           radius: 10,\n           fill: {\n               color: \"#9aa\"\n           },\n           stroke: {\n               weight: 1,\n               color: \"#000\"\n           }\n       });\n\n<p>`Circle` has the following implementations based on browser capability.\n <ul>\n     <li><a href=\"SVGCircle.html\">`SVGCircle`</a></li>\n     <li><a href=\"VMLCircle.html\">`VMLCircle`</a></li>\n     <li><a href=\"CanvasCircle.html\">`CanvasCircle`</a></li>\n </ul>\n\nIt is not necessary to interact with these classes directly. `Circle` will point to the appropriate implemention.</p>",
            "extends": "Shape",
            "is_constructor": 1
        },
        "Ellipse": {
            "name": "Ellipse",
            "shortname": "Ellipse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/GraphicBase.js",
            "line": 766,
            "description": "<p>Creates an ellipse shape with editable attributes.</p>\n<p>`Ellipse` instances can be created using the <a href=\"Graphic.html#method_addShape\">`addShape`</a> method of the\n<a href=\"Graphic.html\">`Graphic`</a> class. The method's `cfg` argument contains a `type` attribute. Assigning \"ellipse\"\nor `Y.Ellipse` to this attribute will create a `Ellipse` instance. Required attributes for instantiating a `Ellipse` are\n`type`, `width` and `height`. Optional attributes include:\n <ul>\n     <li><a href=\"#attr_fill\">fill</a></li>\n     <li><a href=\"#attr_id\">id</a></li>\n     <li><a href=\"#attr_stroke\">stroke</a></li>\n     <li><a href=\"#attr_transform\">transform</a></li>\n     <li><a href=\"#attr_transformOrigin\">transformOrigin</a></li>\n     <li><a href=\"#attr_visible\">visible</a></li>\n     <li><a href=\"#attr_x\">x</a></li>\n     <li><a href=\"#attr_y\">y</a></li>\n </ul>\n\nThe below code creates an ellipse by defining the `type` attribute as \"ellipse\":</p>\n\n       var myEllipse = myGraphic.addShape({\n           type: \"ellipse\",\n           width: 20,\n           height: 10,\n           fill: {\n               color: \"#9aa\"\n           },\n           stroke: {\n               weight: 1,\n               color: \"#000\"\n           }\n       });\n\nBelow, the same ellipse is created by defining the `type` attribute with a class reference:\n\n       var myEllipse = myGraphic.addShape({\n           type: Y.Ellipse,\n           width: 20,\n           height: 10,\n           fill: {\n               color: \"#9aa\"\n           },\n           stroke: {\n               weight: 1,\n               color: \"#000\"\n           }\n       });\n\n<p>`Ellipse` has the following implementations based on browser capability.\n <ul>\n     <li><a href=\"SVGEllipse.html\">`SVGEllipse`</a></li>\n     <li><a href=\"VMLEllipse.html\">`VMLEllipse`</a></li>\n     <li><a href=\"CanvasEllipse.html\">`CanvasEllipse`</a></li>\n </ul>\n\nIt is not necessary to interact with these classes directly. `Ellipse` will point to the appropriate implemention.</p>",
            "extends": "Shape",
            "is_constructor": 1
        },
        "Rect": {
            "name": "Rect",
            "shortname": "Rect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/GraphicBase.js",
            "line": 826,
            "description": "<p>Creates an rectangle shape with editable attributes.</p>\n<p>`Rect` instances can be created using the <a href=\"Graphic.html#method_addShape\">`addShape`</a> method of the\n<a href=\"Graphic.html\">`Graphic`</a> class. The method's `cfg` argument contains a `type` attribute. Assigning \"rect\"\nor `Y.Rect` to this attribute will create a `Rect` instance. Required attributes for instantiating a `Rect` are `type`,\n`width` and `height`. Optional attributes include:\n <ul>\n     <li><a href=\"#attr_fill\">fill</a></li>\n     <li><a href=\"#attr_id\">id</a></li>\n     <li><a href=\"#attr_stroke\">stroke</a></li>\n     <li><a href=\"#attr_transform\">transform</a></li>\n     <li><a href=\"#attr_transformOrigin\">transformOrigin</a></li>\n     <li><a href=\"#attr_visible\">visible</a></li>\n     <li><a href=\"#attr_x\">x</a></li>\n     <li><a href=\"#attr_y\">y</a></li>\n </ul>\n\nThe below code creates a rectangle by defining the `type` attribute as \"rect\":</p>\n\n       var myRect = myGraphic.addShape({\n           type: \"rect\",\n           width: 20,\n           height: 10,\n           fill: {\n               color: \"#9aa\"\n           },\n           stroke: {\n               weight: 1,\n               color: \"#000\"\n           }\n       });\n\nBelow, the same rectangle is created by defining the `type` attribute with a class reference:\n\n       var myRect = myGraphic.addShape({\n           type: Y.Rect,\n           width: 20,\n           height: 10,\n           fill: {\n               color: \"#9aa\"\n           },\n           stroke: {\n               weight: 1,\n               color: \"#000\"\n           }\n       });\n\n<p>`Rect` has the following implementations based on browser capability.\n <ul>\n     <li><a href=\"SVGRect.html\">`SVGRect`</a></li>\n     <li><a href=\"VMLRect.html\">`VMLRect`</a></li>\n     <li><a href=\"CanvasRect.html\">`CanvasRect`</a></li>\n </ul>\n\nIt is not necessary to interact with these classes directly. `Rect` will point to the appropriate implemention.</p>",
            "extends": "Shape",
            "is_constructor": 1
        },
        "Path": {
            "name": "Path",
            "shortname": "Path",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/GraphicBase.js",
            "line": 886,
            "description": "<p>The `Path` class creates a shape through the use of drawing methods. The `Path` class has the following drawing methods available:</p>\n <ul>\n     <li><a href=\"#method_clear\">`clear`</a></li>\n     <li><a href=\"#method_curveTo\">`curveTo`</a></li>\n     <li><a href=\"#method_drawRect\">`drawRect`</a></li>\n     <li><a href=\"#method_drawRoundRect\">`drawRoundRect`</a></li>\n     <li><a href=\"#method_end\">`end`</a></li>\n     <li><a href=\"#method_lineTo\">`lineTo`</a></li>\n     <li><a href=\"#method_moveTo\">`moveTo`</a></li>\n     <li><a href=\"#method_quadraticCurveTo\">`quadraticCurveTo`</a></li>\n </ul>\n\n <p>Like other shapes, `Path` elements are created using the <a href=\"Graphic.html#method_addShape\">`addShape`</a>\n method of the <a href=\"Graphic.html\">`Graphic`</a> class. The method's `cfg` argument contains a `type` attribute.\n Assigning \"path\" or `Y.Path` to this attribute will create a `Path` instance. After instantiation, a series of drawing\n operations must be performed in order to render a shape. The below code instantiates a path element by defining the\n `type` attribute as \"path\":</p>\n\n       var myPath = myGraphic.addShape({\n           type: \"path\",\n           fill: {\n               color: \"#9aa\"\n           },\n           stroke: {\n               weight: 1,\n               color: \"#000\"\n           }\n       });\n\nBelow a `Path` element with the same properties is instantiated by defining the `type` attribute with a class reference:\n\n       var myPath = myGraphic.addShape({\n           type: Y.Path,\n           fill: {\n               color: \"#9aa\"\n           },\n           stroke: {\n               weight: 1,\n               color: \"#000\"\n           }\n       });\n\nAfter instantiation, a shape or segment needs to be drawn for an element to render. After all draw operations are performed,\nthe <a href=\"#method_end\">`end`</a> method will render the shape. The code below will draw a triangle:\n\n       myPath.moveTo(35, 5);\n       myPath.lineTo(65, 65);\n       myPath.lineTo(5, 65);\n       myPath.lineTo(35, 5);\n       myPath.end();\n\n<p>`Path` has the following implementations based on browser capability.\n <ul>\n     <li><a href=\"SVGPath.html\">`SVGPath`</a></li>\n     <li><a href=\"VMLPath.html\">`VMLPath`</a></li>\n     <li><a href=\"CanvasPath.html\">`CanvasPath`</a></li>\n </ul>\nIt is not necessary to interact with these classes directly. `Path` will point to the appropriate implemention.</p>",
            "extends": "Shape",
            "uses": [
                "Drawing"
            ],
            "is_constructor": 1
        },
        "Graphic": {
            "name": "Graphic",
            "shortname": "Graphic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/GraphicBase.js",
            "line": 958,
            "description": "`Graphic` acts a factory and container for shapes. You need at least one `Graphic` instance to create shapes for your application.\n<p>The code block below creates a `Graphic` instance and appends it to an HTMLElement with the id 'mygraphiccontainer'.</p>\n\n       var myGraphic = new Y.Graphic({render:\"#mygraphiccontainer\"});\n\n<p>Alternatively, you can add a `Graphic` instance to the DOM using the <a href=\"#method_render\">`render`</a> method.</p>\n       var myGraphic = new Y.Graphic();\n       myGraphic.render(\"#mygraphiccontainer\");\n\n`Graphic` has the following implementations based on browser capability.\n <ul>\n     <li><a href=\"SVGGraphic.html\">`SVGGraphic`</a></li>\n     <li><a href=\"VMLGraphic.html\">`VMLGraphic`</a></li>\n     <li><a href=\"CanvasGraphic.html\">`CanvasGraphic`</a></li>\n </ul>\n\nIt is not necessary to interact with these classes directly. `Graphic` will point to the appropriate implemention.</p>",
            "is_constructor": 1
        },
        "CanvasDrawing": {
            "name": "CanvasDrawing",
            "shortname": "CanvasDrawing",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/CanvasDrawing.js",
            "line": 24,
            "description": "<a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a> implementation of the <a href=\"Drawing.html\">`Drawing`</a> class.\n`CanvasDrawing` is not intended to be used directly. Instead, use the <a href=\"Drawing.html\">`Drawing`</a> class.\nIf the browser lacks <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> capabilities but has\n<a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a> capabilities, the <a href=\"Drawing.html\">`Drawing`</a>\nclass will point to the `CanvasDrawing` class."
        },
        "CanvasShape": {
            "name": "CanvasShape",
            "shortname": "CanvasShape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/CanvasShape.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a> implementation of the <a href=\"Shape.html\">`Shape`</a> class.\n`CanvasShape` is not intended to be used directly. Instead, use the <a href=\"Shape.html\">`Shape`</a> class.\nIf the browser lacks <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> capabilities but has\n<a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a> capabilities, the <a href=\"Shape.html\">`Shape`</a>\nclass will point to the `CanvasShape` class."
        },
        "CanvasPath": {
            "name": "CanvasPath",
            "shortname": "CanvasPath",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/CanvasPath.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a> implementation of the <a href=\"Path.html\">`Path`</a> class.\n`CanvasPath` is not intended to be used directly. Instead, use the <a href=\"Path.html\">`Path`</a> class.\nIf the browser lacks <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> capabilities but has\n<a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a> capabilities, the <a href=\"Path.html\">`Path`</a>\nclass will point to the `CanvasPath` class."
        },
        "CanvasRect": {
            "name": "CanvasRect",
            "shortname": "CanvasRect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/CanvasRect.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a> implementation of the <a href=\"Rect.html\">`Rect`</a> class.\n`CanvasRect` is not intended to be used directly. Instead, use the <a href=\"Rect.html\">`Rect`</a> class.\nIf the browser lacks <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> capabilities but has\n<a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a> capabilities, the <a href=\"Rect.html\">`Rect`</a>\nclass will point to the `CanvasRect` class."
        },
        "CanvasEllipse": {
            "name": "CanvasEllipse",
            "shortname": "CanvasEllipse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/CanvasEllipse.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a> implementation of the <a href=\"Ellipse.html\">`Ellipse`</a> class.\n`CanvasEllipse` is not intended to be used directly. Instead, use the <a href=\"Ellipse.html\">`Ellipse`</a> class.\nIf the browser lacks <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> capabilities but has\n<a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a> capabilities, the <a href=\"Ellipse.html\">`Ellipse`</a>\nclass will point to the `CanvasEllipse` class."
        },
        "CanvasCircle": {
            "name": "CanvasCircle",
            "shortname": "CanvasCircle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/CanvasCircle.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a> implementation of the <a href=\"Circle.html\">`Circle`</a> class.\n`CanvasCircle` is not intended to be used directly. Instead, use the <a href=\"Circle.html\">`Circle`</a> class.\nIf the browser lacks <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> capabilities but has\n<a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a> capabilities, the <a href=\"Circle.html\">`Circle`</a>\nclass will point to the `CanvasCircle` class."
        },
        "CanvasPieSlice": {
            "name": "CanvasPieSlice",
            "shortname": "CanvasPieSlice",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/CanvasPieSlice.js",
            "line": 1,
            "description": "Draws pie slices"
        },
        "CanvasGraphic": {
            "name": "CanvasGraphic",
            "shortname": "CanvasGraphic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/CanvasGraphic.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a> implementation of the `Graphic` class.\n`CanvasGraphic` is not intended to be used directly. Instead, use the <a href=\"Graphic.html\">`Graphic`</a> class.\nIf the browser lacks <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> capabilities but has\n<a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a> capabilities, the <a href=\"Graphic.html\">`Graphic`</a>\nclass will point to the `CanvasGraphic` class."
        },
        "SVGDrawing": {
            "name": "SVGDrawing",
            "shortname": "SVGDrawing",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/SVGDrawing.js",
            "line": 19,
            "description": "<a href=\"http://www.w3.org/TR/SVG/\">SVG</a> implementation of the <a href=\"Drawing.html\">`Drawing`</a> class.\n`SVGDrawing` is not intended to be used directly. Instead, use the <a href=\"Drawing.html\">`Drawing`</a> class.\nIf the browser has <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> capabilities, the <a href=\"Drawing.html\">`Drawing`</a>\nclass will point to the `SVGDrawing` class."
        },
        "SVGShape": {
            "name": "SVGShape",
            "shortname": "SVGShape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/SVGShape.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/SVG/\">SVG</a> implementation of the <a href=\"Shape.html\">`Shape`</a> class.\n`SVGShape` is not intended to be used directly. Instead, use the <a href=\"Shape.html\">`Shape`</a> class.\nIf the browser has <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> capabilities, the <a href=\"Shape.html\">`Shape`</a>\nclass will point to the `SVGShape` class."
        },
        "SVGPath": {
            "name": "SVGPath",
            "shortname": "SVGPath",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/SVGPath.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/SVG/\">SVG</a> implementation of the <a href=\"Path.html\">`Path`</a> class.\n`SVGPath` is not intended to be used directly. Instead, use the <a href=\"Path.html\">`Path`</a> class.\nIf the browser has <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> capabilities, the <a href=\"Path.html\">`Path`</a>\nclass will point to the `SVGPath` class."
        },
        "SVGRect": {
            "name": "SVGRect",
            "shortname": "SVGRect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/SVGRect.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/SVG/\">SVG</a> implementation of the <a href=\"Rect.html\">`Rect`</a> class.\n`SVGRect` is not intended to be used directly. Instead, use the <a href=\"Rect.html\">`Rect`</a> class.\nIf the browser has <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> capabilities, the <a href=\"Rect.html\">`Rect`</a>\nclass will point to the `SVGRect` class."
        },
        "SVGEllipse": {
            "name": "SVGEllipse",
            "shortname": "SVGEllipse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/SVGEllipse.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/SVG/\">SVG</a> implementation of the <a href=\"Ellipse.html\">`Ellipse`</a> class.\n`SVGEllipse` is not intended to be used directly. Instead, use the <a href=\"Ellipse.html\">`Ellipse`</a> class.\nIf the browser has <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> capabilities, the <a href=\"Ellipse.html\">`Ellipse`</a>\nclass will point to the `SVGEllipse` class."
        },
        "SVGCircle": {
            "name": "SVGCircle",
            "shortname": "SVGCircle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/SVGCircle.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/SVG/\">SVG</a> implementation of the <a href=\"Circle.html\">`Circle`</a> class.\n`SVGCircle` is not intended to be used directly. Instead, use the <a href=\"Circle.html\">`Circle`</a> class.\nIf the browser has <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> capabilities, the <a href=\"Circle.html\">`Circle`</a>\nclass will point to the `SVGCircle` class."
        },
        "SVGPieSlice": {
            "name": "SVGPieSlice",
            "shortname": "SVGPieSlice",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/SVGPieSlice.js",
            "line": 1,
            "description": "Draws pie slices"
        },
        "SVGGraphic": {
            "name": "SVGGraphic",
            "shortname": "SVGGraphic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/SVGGraphic.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/SVG/\">SVG</a> implementation of the <a href=\"Graphic.html\">`Graphic`</a> class.\n`SVGGraphic` is not intended to be used directly. Instead, use the <a href=\"Graphic.html\">`Graphic`</a> class.\nIf the browser has <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> capabilities, the <a href=\"Graphic.html\">`Graphic`</a>\nclass will point to the `SVGGraphic` class."
        },
        "VMLDrawing": {
            "name": "VMLDrawing",
            "shortname": "VMLDrawing",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/VMLDrawing.js",
            "line": 24,
            "description": "<a href=\"http://www.w3.org/TR/NOTE-VML\">VML</a> implementation of the <a href=\"Drawing.html\">`Drawing`</a> class.\n`VMLDrawing` is not intended to be used directly. Instead, use the <a href=\"Drawing.html\">`Drawing`</a> class.\nIf the browser lacks <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> and <a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a>\ncapabilities, the <a href=\"Drawing.html\">`Drawing`</a> class will point to the `VMLDrawing` class."
        },
        "VMLShape": {
            "name": "VMLShape",
            "shortname": "VMLShape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/VMLShape.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/NOTE-VML\">VML</a> implementation of the <a href=\"Shape.html\">`Shape`</a> class.\n`VMLShape` is not intended to be used directly. Instead, use the <a href=\"Shape.html\">`Shape`</a> class.\nIf the browser lacks <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> and <a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a>\ncapabilities, the <a href=\"Shape.html\">`Shape`</a> class will point to the `VMLShape` class."
        },
        "VMLPath": {
            "name": "VMLPath",
            "shortname": "VMLPath",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/VMLPath.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/NOTE-VML\">VML</a> implementation of the <a href=\"Path.html\">`Path`</a> class.\n`VMLPath` is not intended to be used directly. Instead, use the <a href=\"Path.html\">`Path`</a> class.\nIf the browser lacks <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> and <a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a>\ncapabilities, the <a href=\"Path.html\">`Path`</a> class will point to the `VMLPath` class."
        },
        "VMLRect": {
            "name": "VMLRect",
            "shortname": "VMLRect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/VMLRect.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/NOTE-VML\">VML</a> implementation of the <a href=\"Rect.html\">`Rect`</a> class.\n`VMLRect` is not intended to be used directly. Instead, use the <a href=\"Rect.html\">`Rect`</a> class.\nIf the browser lacks <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> and <a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a>\ncapabilities, the <a href=\"Rect.html\">`Rect`</a> class will point to the `VMLRect` class."
        },
        "VMLEllipse": {
            "name": "VMLEllipse",
            "shortname": "VMLEllipse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/VMLEllipse.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/NOTE-VML\">VML</a> implementation of the <a href=\"Ellipse.html\">`Ellipse`</a> class.\n`VMLEllipse` is not intended to be used directly. Instead, use the <a href=\"Ellipse.html\">`Ellipse`</a> class.\nIf the browser lacks <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> and <a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a>\ncapabilities, the <a href=\"Ellipse.html\">`Ellipse`</a> class will point to the `VMLEllipse` class."
        },
        "VMLCircle": {
            "name": "VMLCircle",
            "shortname": "VMLCircle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/VMLCircle.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/NOTE-VML\">VML</a> implementation of the <a href=\"Circle.html\">`Circle`</a> class.\n`VMLCircle` is not intended to be used directly. Instead, use the <a href=\"Circle.html\">`Circle`</a> class.\nIf the browser lacks <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> and <a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a>\ncapabilities, the <a href=\"Circle.html\">`Circle`</a> class will point to the `VMLCircle` class."
        },
        "VMLPieSlice": {
            "name": "VMLPieSlice",
            "shortname": "VMLPieSlice",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/VMLPieSlice.js",
            "line": 1,
            "description": "Draws pie slices"
        },
        "VMLGraphic": {
            "name": "VMLGraphic",
            "shortname": "VMLGraphic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "graphics",
            "namespace": "",
            "file": "src/graphics/js/VMLGraphic.js",
            "line": 1,
            "description": "<a href=\"http://www.w3.org/TR/NOTE-VML\">VML</a> implementation of the <a href=\"Graphic.html\">`Graphic`</a> class.\n`VMLGraphic` is not intended to be used directly. Instead, use the <a href=\"Graphic.html\">`Graphic`</a> class.\nIf the browser lacks <a href=\"http://www.w3.org/TR/SVG/\">SVG</a> and <a href=\"http://www.w3.org/TR/html5/the-canvas-element.html\">Canvas</a>\ncapabilities, the <a href=\"Graphic.html\">`Graphic`</a> class will point to the `VMLGraphic` class."
        },
        "Handlebars": {
            "name": "Handlebars",
            "shortname": "Handlebars",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "handlebars",
            "submodule": "handlebars-base",
            "namespace": "",
            "file": "src/handlebars/js/yui-handlebars-base-after.js",
            "line": 23,
            "description": "Handlebars is a simple template language inspired by Mustache.\n\nThis is a YUI port of the original Handlebars project, which can be found at\n<https://github.com/wycats/handlebars.js>.",
            "since": "3.5.0"
        },
        "Highlight": {
            "name": "Highlight",
            "shortname": "Highlight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "highlight",
            "submodule": "highlight-base",
            "namespace": "",
            "file": "src/highlight/js/highlight-base.js",
            "line": 11,
            "static": 1,
            "description": "Provides methods for highlighting strings within other strings by wrapping\nthem in HTML.\n\nThe highlight methods first escape any special HTML characters in the input\nstrings and then highlight the appropriate substrings by wrapping them in a\n`<b class=\"yui3-highlight\"></b>` element. The `<b>` element is used rather than\n`<strong>` in accordance with HTML5's definition of `<b>` as being purely\npresentational, which is exactly what highlighting is."
        },
        "HistoryBase": {
            "name": "HistoryBase",
            "shortname": "HistoryBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "history",
            "submodule": "history-base",
            "namespace": "",
            "file": "src/history/js/history-base.js",
            "line": 13,
            "description": "Provides global state management backed by an object, but with no browser\nhistory integration. For actual browser history integration and back/forward\nsupport, use the history-html5 or history-hash modules."
        },
        "HistoryHash": {
            "name": "HistoryHash",
            "shortname": "HistoryHash",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "history",
            "submodule": "history-hash",
            "namespace": "",
            "file": "src/history/js/history-hash.js",
            "line": 1,
            "description": "Provides browser history management backed by\n<code>window.location.hash</code>, as well as convenience methods for working\nwith the location hash and a synthetic <code>hashchange</code> event that\nnormalizes differences across browsers.",
            "since": "3.2.0"
        },
        "HistoryHTML5": {
            "name": "HistoryHTML5",
            "shortname": "HistoryHTML5",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "history",
            "submodule": "history-html5",
            "namespace": "",
            "file": "src/history/js/history-html5.js",
            "line": 9,
            "description": "<p>\nProvides browser history management using the HTML5 history API.\n</p>\n\n<p>\nWhen calling the <code>add()</code>, <code>addValue()</code>,\n<code>replace()</code>, or <code>replaceValue()</code> methods on\n<code>HistoryHTML5</code>, the following additional options are supported:\n</p>\n\n<dl>\n  <dt><strong>title (String)</strong></dt>\n  <dd>\n    Title to use for the new history entry. Browsers will typically display\n    this title to the user in the detailed history window or in a dropdown\n    menu attached to the back/forward buttons. If not specified, the title\n    of the current document will be used.\n  </dd>\n\n  <dt><strong>url (String)</strong></dt>\n  <dd>\n    URL to display to the user for the new history entry. This URL will be\n    visible in the browser's address bar and will be the bookmarked URL if\n    the user bookmarks the page. It may be a relative path (\"foo/bar\"), an\n    absolute path (\"/foo/bar\"), or a full URL (\"http://example.com/foo/bar\").\n    If you specify a full URL, the origin <i>must</i> be the same as the\n    origin of the current page, or an error will occur. If no URL is\n    specified, the current URL will not be changed.\n  </dd>\n</dl>",
            "extends": "HistoryBase",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "(optional) Configuration object.",
                    "type": "Object"
                }
            ]
        },
        "config": {
            "name": "config",
            "shortname": "config",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "yui",
            "submodule": "yui-base",
            "namespace": "",
            "file": "src/yui/js/yui.js",
            "line": 1502,
            "description": "Config object that contains all of the configuration options for\nthis `YUI` instance.\n\nThis object is supplied by the implementer when instantiating YUI. Some\nproperties have default values if they are not supplied by the implementer.\n\nThis object should not be updated directly because some values are cached. Use\n`applyConfig()` to update the config object on a YUI instance that has already\nbeen configured.",
            "static": 1
        },
        "ImgLoadGroup": {
            "name": "ImgLoadGroup",
            "shortname": "ImgLoadGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "imageloader",
            "namespace": "",
            "file": "src/imageloader/js/imageloader.js",
            "line": 9,
            "description": "A group for images. A group can have one time limit and a series of triggers. Thus the images belonging to this group must share these constraints.",
            "extends": "Base",
            "is_constructor": 1
        },
        "ImgLoadImgObj": {
            "name": "ImgLoadImgObj",
            "shortname": "ImgLoadImgObj",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "imageloader",
            "namespace": "",
            "file": "src/imageloader/js/imageloader.js",
            "line": 418,
            "description": "Image objects to be registered with the groups",
            "extends": "Base",
            "is_constructor": 1
        },
        "Intl": {
            "name": "Intl",
            "shortname": "Intl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "features",
            "namespace": "",
            "file": "src/yui/js/intl-base.js",
            "line": 1,
            "description": "The Intl utility provides a central location for managing sets of\nlocalized resources (strings and formatting patterns).",
            "uses": [
                "EventTarget"
            ],
            "static": 1,
            "submodule": "yui-log"
        },
        "IO": {
            "name": "IO",
            "shortname": "IO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "io",
            "submodule": "io-base",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 17760,
            "description": "The IO class is a utility that brokers HTTP requests through a simplified\ninterface.  Specifically, it allows JavaScript to make HTTP requests to\na resource without a page reload.  The underlying transport for making\nsame-domain requests is the XMLHttpRequest object.  IO can also use\nFlash, if specified as a transport, for cross-domain requests.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object of EventTarget's publish method configurations\n                    used to configure IO's events.",
                    "type": "Object"
                }
            ]
        },
        "JSON": {
            "name": "JSON",
            "shortname": "JSON",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "transition",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 18746,
            "description": "<p>The JSON module adds support for serializing JavaScript objects into\nJSON strings and parsing JavaScript objects from strings in JSON format.</p>\n\n<p>The JSON namespace is added to your YUI instance including static methods\nY.JSON.parse(..) and Y.JSON.stringify(..).</p>\n\n<p>The functionality and method signatures follow the ECMAScript 5\nspecification.  In browsers with native JSON support, the native\nimplementation is used.</p>\n\n<p>The <code>json</code> module is a rollup of <code>json-parse</code> and\n<code>json-stringify</code>.</p>\n\n<p>As their names suggest, <code>json-parse</code> adds support for parsing\nJSON data (Y.JSON.parse) and <code>json-stringify</code> for serializing\nJavaScript data into JSON strings (Y.JSON.stringify).  You may choose to\ninclude either of the submodules individually if you don't need the\ncomplementary functionality, or include the rollup for both.</p>",
            "mainName": "json",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "submodule": "json-parse"
        },
        "JSONPRequest": {
            "name": "JSONPRequest",
            "shortname": "JSONPRequest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "jsonp",
            "namespace": "",
            "file": "src/jsonp/js/jsonp.js",
            "line": 3,
            "description": "<p>Provides a JSONPRequest class for repeated JSONP calls, and a convenience\nmethod Y.jsonp(url, callback) to instantiate and send a JSONP request.</p>\n\n<p>Both the constructor as well as the convenience function take two\nparameters: a url string and a callback.</p>\n\n<p>The url provided must include the placeholder string\n&quot;{callback}&quot; which will be replaced by a dynamically\ngenerated routing function to pass the data to your callback function.\nAn example url might look like\n&quot;http://example.com/service?callback={callback}&quot;.</p>\n\n<p>The second parameter can be a callback function that accepts the JSON\npayload as its argument, or a configuration object supporting the keys:</p>\n<ul>\n  <li>on - map of callback subscribers\n     <ul>\n        <li>success - function handler for successful transmission</li>\n        <li>failure - function handler for failed transmission</li>\n        <li>timeout - function handler for transactions that timeout</li>\n     </ul>\n </li>\n <li>format  - override function for inserting the proxy name in the url</li>\n <li>timeout - the number of milliseconds to wait before giving up</li>\n <li>context - becomes <code>this</code> in the callbacks</li>\n <li>args    - array of subsequent parameters to pass to the callbacks</li>\n <li>allowCache - use the same proxy name for all requests? (boolean)</li>\n</ul>"
        },
        "LazyModelList": {
            "name": "LazyModelList",
            "shortname": "LazyModelList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "app",
            "submodule": "lazy-model-list",
            "namespace": "",
            "file": "src/app/js/lazy-model-list.js",
            "line": 10,
            "description": "LazyModelList is a subclass of ModelList that maintains a list of plain\nJavaScript objects rather than a list of Model instances. This makes it\nwell-suited for managing large amounts of data (on the order of thousands of\nitems) that would tend to bog down a vanilla ModelList.\n\nThe API presented by LazyModelList is the same as that of ModelList, except that\nin every case where ModelList would provide a Model instance, LazyModelList\nprovides a plain JavaScript object. LazyModelList also provides a `revive()`\nmethod that can convert the plain object at a given index into a full Model\ninstance.\n\nSince the items stored in a LazyModelList are plain objects and not full Model\ninstances, there are a few caveats to be aware of:\n\n  * Since items are plain objects and not Model instances, they contain\n    properties rather than Model attributes. To retrieve a property, use\n    `item.foo` rather than `item.get('foo')`. To set a property, use\n    `item.foo = 'bar'` rather than `item.set('foo', 'bar')`.\n\n  * Model attribute getters and setters aren't supported, since items in the\n    LazyModelList are stored and manipulated as plain objects with simple\n    properties rather than YUI attributes.\n\n  * Changes made to the plain object version of an item will not trigger or\n    bubble up Model `change` events. However, once an item is revived into a\n    full Model using the `revive()` method, changes to that Model instance\n    will trigger and bubble change events as expected.\n\n  * Custom `idAttribute` fields are not supported.\n\n  * `id` and `clientId` properties _are_ supported. If an item doesn't have a\n    `clientId` property, one will be generated automatically when the item is\n    added to a LazyModelList.\n\nLazyModelList is generally much more memory efficient than ModelList when\nmanaging large numbers of items, and adding/removing items is significantly\nfaster. However, the tradeoff is that LazyModelList is only well-suited for\nstoring very simple items without complex attributes, and consumers must\nexplicitly revive items into full Model instances as needed (this is not done\ntransparently for performance reasons).",
            "extends": "ModelList",
            "is_constructor": 1,
            "since": "3.6.0"
        },
        "Loader": {
            "name": "Loader",
            "shortname": "Loader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "loader",
            "submodule": "loader-base",
            "namespace": "",
            "file": "src/loader/js/loader.js",
            "line": 60,
            "description": "Loader dynamically loads script and css files.  It includes the dependency\ninfo for the version of the library in use, and will automatically pull in\ndependencies for the modules requested. It can load the\nfiles from the Yahoo! CDN, and it can utilize the combo service provided on\nthis network to reduce the number of http connections required to download\nYUI files. You can also specify an external, custom combo service to host\nyour modules as well.\n\n       var Y = YUI();\n       var loader = new Y.Loader({\n           filter: 'debug',\n           base: '../../',\n           root: 'build/',\n           combine: true,\n           require: ['node', 'dd', 'console']\n       });\n       var out = loader.resolve(true);",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "an optional set of configuration options.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "base",
                            "description": "The base dir which to fetch this module from",
                            "type": "String"
                        },
                        {
                            "name": "comboBase",
                            "description": "The Combo service base path. Ex: `http://yui.yahooapis.com/combo?`",
                            "type": "String"
                        },
                        {
                            "name": "root",
                            "description": "The root path to prepend to module names for the combo service. Ex: `2.5.2/build/`",
                            "type": "String"
                        },
                        {
                            "name": "filter",
                            "description": "A filter to apply to result urls. <a href=\"#property_filter\">See filter property</a>",
                            "type": "String|Object"
                        },
                        {
                            "name": "filters",
                            "description": "Per-component filter specification.  If specified for a given component, this overrides the filter config.",
                            "type": "Object"
                        },
                        {
                            "name": "combine",
                            "description": "Use a combo service to reduce the number of http connections required to load your dependencies",
                            "type": "Boolean"
                        },
                        {
                            "name": "async",
                            "description": "Fetch files in async",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "ignore:",
                            "description": "A list of modules that should never be dynamically loaded",
                            "type": "Array"
                        },
                        {
                            "name": "force",
                            "description": "A list of modules that should always be loaded when required, even if already present on the page",
                            "type": "Array"
                        },
                        {
                            "name": "insertBefore",
                            "description": "Node or id for a node that should be used as the insertion point for new nodes",
                            "type": "HTMLElement|String"
                        },
                        {
                            "name": "jsAttributes",
                            "description": "Object literal containing attributes to add to script nodes",
                            "type": "Object"
                        },
                        {
                            "name": "cssAttributes",
                            "description": "Object literal containing attributes to add to link nodes",
                            "type": "Object"
                        },
                        {
                            "name": "timeout",
                            "description": "The number of milliseconds before a timeout occurs when dynamically loading nodes.  If not set, there is no timeout",
                            "type": "Number"
                        },
                        {
                            "name": "context",
                            "description": "Execution context for all callbacks",
                            "type": "Object"
                        },
                        {
                            "name": "onSuccess",
                            "description": "Callback for the 'success' event",
                            "type": "Function"
                        },
                        {
                            "name": "onFailure",
                            "description": "Callback for the 'failure' event",
                            "type": "Function"
                        },
                        {
                            "name": "onCSS",
                            "description": "Callback for the 'CSSComplete' event.  When loading YUI components with CSS the CSS is loaded first, then the script.  This provides a moment you can tie into to improve the presentation of the page while the script is loading.",
                            "type": "Function"
                        },
                        {
                            "name": "onTimeout",
                            "description": "Callback for the 'timeout' event",
                            "type": "Function"
                        },
                        {
                            "name": "onProgress",
                            "description": "Callback executed each time a script or css file is loaded",
                            "type": "Function"
                        },
                        {
                            "name": "modules",
                            "description": "A list of module definitions.  See <a href=\"#method_addModule\">Loader.addModule</a> for the supported module metadata",
                            "type": "Object"
                        },
                        {
                            "name": "groups",
                            "description": "A list of group definitions.  Each group can contain specific definitions for `base`, `comboBase`, `combine`, and accepts a list of `modules`.",
                            "type": "Object"
                        },
                        {
                            "name": "2in3",
                            "description": "The version of the YUI 2 in 3 wrapper to use.  The intrinsic support for YUI 2 modules in YUI 3 relies on versions of the YUI 2 components inside YUI 3 module wrappers.  These wrappers change over time to accomodate the issues that arise from running YUI 2 in a YUI 3 sandbox.",
                            "type": "String"
                        },
                        {
                            "name": "yui2",
                            "description": "When using the 2in3 project, you can select the version of YUI 2 to use.  Valid values are `2.2.2`, `2.3.1`, `2.4.1`, `2.5.2`, `2.6.0`, `2.7.0`, `2.8.0`, `2.8.1` and `2.9.0` [default] -- plus all versions of YUI 2 going forward.",
                            "type": "String"
                        }
                    ]
                }
            ]
        },
        "MatrixUtil": {
            "name": "MatrixUtil",
            "shortname": "MatrixUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "matrix",
            "namespace": "",
            "file": "src/matrix/js/MatrixUtil.js",
            "line": 1,
            "description": "Matrix utilities."
        },
        "Matrix": {
            "name": "Matrix",
            "shortname": "Matrix",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "matrix",
            "namespace": "",
            "file": "src/matrix/js/Matrix.js",
            "line": 1,
            "description": "Matrix is a class that allows for the manipulation of a transform matrix.\nThis class is a work in progress.",
            "is_constructor": 1
        },
        "Model": {
            "name": "Model",
            "shortname": "Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "app",
            "submodule": "model",
            "namespace": "",
            "file": "src/app/js/model.js",
            "line": 10,
            "description": "Attribute-based data model with APIs for getting, setting, validating, and\nsyncing attribute values, as well as events for being notified of model changes.\n\nIn most cases, you'll want to create your own subclass of `Y.Model` and\ncustomize it to meet your needs. In particular, the `sync()` and `validate()`\nmethods are meant to be overridden by custom implementations. You may also want\nto override the `parse()` method to parse non-generic server responses.",
            "is_constructor": 1,
            "extends": "Base",
            "since": "3.4.0"
        },
        "ModelList": {
            "name": "ModelList",
            "shortname": "ModelList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "app",
            "submodule": "model-list",
            "namespace": "",
            "file": "src/app/js/model-list.js",
            "line": 9,
            "description": "Provides an API for managing an ordered list of Model instances.\n\nIn addition to providing convenient `add`, `create`, `reset`, and `remove`\nmethods for managing the models in the list, ModelLists are also bubble targets\nfor events on the model instances they contain. This means, for example, that\nyou can add several models to a list, and then subscribe to the `*:change` event\non the list to be notified whenever any model in the list changes.\n\nModelLists also maintain sort order efficiently as models are added and removed,\nbased on a custom `comparator` function you may define (if no comparator is\ndefined, models are sorted in insertion order).",
            "extends": "Base",
            "uses": [
                "ArrayList"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Config options.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "items",
                            "description": "Model\n        instance, array of model instances, or ModelList to add to this list on\n        init. The `add` event will not be fired for models added on init.",
                            "type": "Model|Model[]|ModelList|Object|Object[]"
                        }
                    ]
                }
            ],
            "since": "3.4.0"
        },
        "ModelSync.REST": {
            "name": "ModelSync.REST",
            "shortname": "ModelSync.REST",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Model",
                "ModelList",
                "Model",
                "ModelList",
                "Model",
                "ModelList",
                "Model",
                "ModelList",
                "Model",
                "ModelList",
                "Model",
                "ModelList",
                "Model",
                "ModelList"
            ],
            "module": "app",
            "submodule": "model-sync-rest",
            "namespace": "",
            "file": "src/app/js/model-extensions/model-sync-rest.js",
            "line": 12,
            "description": "An extension which provides a RESTful XHR sync implementation that can be mixed\ninto a Model or ModelList subclass.\n\nThis makes it trivial for your Model or ModelList subclasses communicate and\ntransmit their data via RESTful XHRs. In most cases you'll only need to provide\na value for `root` when sub-classing `Y.Model`.\n\n    Y.User = Y.Base.create('user', Y.Model, [Y.ModelSync.REST], {\n        root: '/users'\n    });\n\n    Y.Users = Y.Base.create('users', Y.ModelList, [Y.ModelSync.REST], {\n        // By convention `Y.User`'s `root` will be used for the lists' URL.\n        model: Y.User\n    });\n\n    var users = new Y.Users();\n\n    // GET users list from: \"/users\"\n    users.load(function () {\n        var firstUser = users.item(0);\n\n        firstUser.get('id'); // => \"1\"\n\n        // PUT updated user data at: \"/users/1\"\n        firstUser.set('name', 'Eric').save();\n    });",
            "since": "3.6.0"
        },
        "Node": {
            "name": "Node",
            "shortname": "Node",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "node",
            "submodule": "node-style",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 12140,
            "description": "The Node class provides a wrapper for manipulating DOM Nodes.\nNode properties can be accessed via the set/get methods.\nUse `Y.one()` to retrieve Node instances.\n\n<strong>NOTE:</strong> Node properties are accessed using\nthe <code>set</code> and <code>get</code> methods.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "node",
                    "description": "the DOM node to be mapped to the Node instance.",
                    "type": "DOMNode"
                }
            ],
            "uses": [
                "EventTarget"
            ]
        },
        "NodeList": {
            "name": "NodeList",
            "shortname": "NodeList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dom",
            "submodule": "selector-css2",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 12976,
            "description": "The NodeList class provides a wrapper for manipulating DOM NodeLists.\nNodeList properties can be accessed via the set/get methods.\nUse Y.all() to retrieve NodeList instances.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "nodes",
                    "description": "A selector, DOM element, Node, list of DOM elements, or list of Nodes with which to populate this NodeList.",
                    "type": "String|element|Node|Array"
                }
            ]
        },
        "Plugin.Flick": {
            "name": "Plugin.Flick",
            "shortname": "Plugin.Flick",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "node-flick",
            "namespace": "Plugin",
            "file": "src/node-flick/js/NodeFlick.js",
            "line": 31,
            "description": "A plugin class which can be used to animate the motion of a node, in response to a flick gesture.",
            "params": [
                {
                    "name": "config",
                    "description": "The initial attribute values for the plugin",
                    "type": "Object"
                }
            ]
        },
        "plugin.NodeFocusManager": {
            "name": "plugin.NodeFocusManager",
            "shortname": "plugin.NodeFocusManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "node-focusmanager",
            "namespace": "plugin",
            "file": "src/node-focusmanager/js/node-focusmanager.js",
            "line": 67,
            "description": "The NodeFocusManager class is a plugin for a Node instance.  The class is used\nvia the <a href=\"Node.html#method_plug\"><code>plug</code></a> method of Node\nand should not be instantiated directly."
        },
        "plugin.NodeMenuNav": {
            "name": "plugin.NodeMenuNav",
            "shortname": "plugin.NodeMenuNav",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "node-menunav",
            "namespace": "plugin",
            "file": "src/node-menunav/js/node-menunav.js",
            "line": 344,
            "description": "The NodeMenuNav class is a plugin for a Node instance.  The class is used via  \nthe <a href=\"Node.html#method_plug\"><code>plug</code></a> method of Node and \nshould not be instantiated directly."
        },
        "Plugin.ScrollInfo": {
            "name": "Plugin.ScrollInfo",
            "shortname": "Plugin.ScrollInfo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "node-scroll-info",
            "namespace": "",
            "file": "src/node-scroll-info/js/node-scroll-info.js",
            "line": 9,
            "description": "Provides convenient events and methods related to scrolling. This could be used,\nfor example, to implement infinite scrolling, or to lazy-load content based on\nthe current scroll position.\n\n### Example\n\n    var body = Y.one('body');\n\n    body.plug(Y.Plugin.ScrollInfo);\n\n    body.scrollInfo.on('scrollToBottom', function (e) {\n        // Load more content when the user scrolls to the bottom of the page.\n    });",
            "extends": "Plugin.Base",
            "since": "3.7.0"
        },
        "Overlay": {
            "name": "Overlay",
            "shortname": "Overlay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "overlay",
            "namespace": "",
            "file": "src/overlay/js/Overlay.js",
            "line": 9,
            "description": "A basic Overlay Widget, which can be positioned based on Page XY co-ordinates and is stackable (z-index support).\nIt also provides alignment and centering support and uses a standard module format for it's content, with header,\nbody and footer section support.",
            "is_constructor": 1,
            "extends": "Widget",
            "uses": [
                "WidgetStdMod",
                "WidgetPosition",
                "WidgetStack",
                "WidgetPositionAlign",
                "WidgetPositionConstrain"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "The user configuration for the instance.",
                    "type": "Object"
                }
            ]
        },
        "Panel": {
            "name": "Panel",
            "shortname": "Panel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panel",
            "namespace": "",
            "file": "src/panel/js/panel.js",
            "line": 14,
            "description": "A basic Panel Widget, which can be positioned based on Page XY co-ordinates and\nis stackable (z-index support). It also provides alignment and centering support\nand uses a standard module format for it's content, with header, body and footer\nsection support. It can be made modal, and has functionality to hide and focus\non different events. The header and footer sections can be modified to allow for\nbutton support.",
            "is_constructor": 1,
            "extends": "Widget",
            "uses": [
                "WidgetAutohide",
                "WidgetButtons",
                "WidgetModality",
                "WidgetPosition",
                "WidgetPositionAlign",
                "WidgetPositionConstrain",
                "WidgetStack",
                "WidgetStdMod"
            ],
            "since": "3.4.0"
        },
        "Parallel": {
            "name": "Parallel",
            "shortname": "Parallel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "parallel",
            "namespace": "",
            "file": "src/parallel/js/parallel.js",
            "line": 8,
            "description": "A concurrent parallel processor to help in running several async functions.\n\n    var stack = new Y.Parallel();\n\n    for (var i = 0; i < 15; i++) {\n        Y.io('./api/json/' + i, {\n            on: {\n                success: stack.add(function() {\n                    Y.log('Done!');\n                })\n            }\n        });\n    }\n\n    stack.done(function() {\n        Y.log('All IO requests complete!');\n    });",
            "params": [
                {
                    "name": "o",
                    "description": "A config object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "context",
                            "description": "The execution context of the callback to done",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "Y"
                        }
                    ]
                }
            ]
        },
        "Pjax": {
            "name": "Pjax",
            "shortname": "Pjax",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "pjax",
            "namespace": "",
            "file": "src/pjax/js/pjax.js",
            "line": 58,
            "description": "Provides seamless, gracefully degrading Pjax (pushState + Ajax) functionality,\nwhich makes it easy to progressively enhance standard links on the page so that\nthey can be loaded normally in old browsers, or via Ajax (with HTML5 history\nsupport) in newer browsers.",
            "extends": "Router",
            "uses": [
                "PjaxBase",
                "PjaxContent"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Config attributes.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "since": "3.5.0"
        },
        "PjaxBase": {
            "name": "PjaxBase",
            "shortname": "PjaxBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Router",
                "Router",
                "Router",
                "Router",
                "Router",
                "Router",
                "Router",
                "App.Base",
                "Pjax"
            ],
            "module": "pjax",
            "submodule": "pjax-base",
            "namespace": "",
            "file": "src/pjax/js/pjax-base.js",
            "line": 43,
            "description": "`Y.Router` extension that provides the core plumbing for enhanced navigation\nimplemented using the pjax technique (HTML5 `pushState` + Ajax).\n\nThis makes it easy to enhance the navigation between the URLs of an application\nin HTML5 history capable browsers by delegating to the router to fulfill the\n\"request\" and seamlessly falling-back to using standard full-page reloads in\nolder, less-capable browsers.\n\nThe `PjaxBase` class isn't useful on its own, but can be mixed into a\n`Router`-based class to add Pjax functionality to that Router. For a pre-made\nstandalone Pjax router, see the `Pjax` class.\n\n    var MyRouter = Y.Base.create('myRouter', Y.Router, [Y.PjaxBase], {\n        // ...\n    });",
            "since": "3.5.0"
        },
        "PjaxContent": {
            "name": "PjaxContent",
            "shortname": "PjaxContent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Router",
                "Router",
                "Router",
                "Router",
                "Router",
                "Router",
                "Router",
                "App",
                "App.Content",
                "Pjax"
            ],
            "module": "pjax",
            "submodule": "pjax-content",
            "namespace": "",
            "file": "src/pjax/js/pjax-content.js",
            "line": 10,
            "description": "`Y.Router` extension that provides the content fetching and handling needed to\nimplement the standard pjax (HTMP5 pushState + Ajax) functionality.\n\nThis makes it easy to fetch server rendered content for URLs using Ajax. By\nhelping the router to fulfill the \"request\" for the content you can avoid full\npage loads.\n\nThe `PjaxContent` class isn't useful on its own, but can be mixed into a\n`Router`-based class along with the `PjaxBase` class to add Pjax functionality\nto that Router. For a pre-made standalone Pjax router, see the `Pjax` class.\n\n    var MyRouter = Y.Base.create('myRouter', Y.Router, [\n        Y.PjaxBase,\n        Y.PjaxContent\n    ], {\n        // ...\n    });",
            "since": "3.7.0"
        },
        "Plugin.Pjax": {
            "name": "Plugin.Pjax",
            "shortname": "Plugin.Pjax",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "pjax",
            "submodule": "pjax-plugin",
            "namespace": "",
            "file": "src/pjax/js/pjax-plugin.js",
            "line": 9,
            "description": "Node plugin that provides seamless, gracefully degrading pjax functionality.",
            "extends": "Pjax",
            "since": "3.5.0"
        },
        "Plugin.Base": {
            "name": "Plugin.Base",
            "shortname": "Plugin.Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Plugin.Cache",
                "DataSourceCache"
            ],
            "module": "plugin",
            "namespace": "",
            "file": "src/plugin/js/plugin.js",
            "line": 7,
            "description": "The base class for all Plugin instances.",
            "extends": "Base",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object with property name/value pairs.",
                    "type": "Object"
                }
            ]
        },
        "Plugin.Host": {
            "name": "Plugin.Host",
            "shortname": "Plugin.Host",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "event",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 16587,
            "description": "<p>\nAn augmentable class, which provides the augmented class with the ability to host plugins.\nIt adds <a href=\"#method_plug\">plug</a> and <a href=\"#method_unplug\">unplug</a> methods to the augmented class, which can \nbe used to add or remove plugins from instances of the class.\n</p>\n\n<p>Plugins can also be added through the constructor configuration object passed to the host class' constructor using\nthe \"plugins\" property. Supported values for the \"plugins\" property are those defined by the <a href=\"#method_plug\">plug</a> method. \n\nFor example the following code would add the AnimPlugin and IOPlugin to Overlay (the plugin host):\n<xmp>\nvar o = new Overlay({plugins: [ AnimPlugin, {fn:IOPlugin, cfg:{section:\"header\"}}]});\n</xmp>\n</p>\n<p>\nPlug.Host's protected <a href=\"#method_initPlugins\">_initPlugins</a> and <a href=\"#method_destroyPlugins\">_destroyPlugins</a> \nmethods should be invoked by the host class at the appropriate point in the host's lifecyle.  \n</p>",
            "submodule": "event-delegate"
        },
        "Profiler": {
            "name": "Profiler",
            "shortname": "Profiler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "profiler",
            "namespace": "",
            "file": "src/profiler/js/Profiler.js",
            "line": 82,
            "description": "Profiles functions in JavaScript.",
            "static": 1
        },
        "QueryString": {
            "name": "QueryString",
            "shortname": "QueryString",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "querystring",
            "submodule": "querystring-parse",
            "namespace": "",
            "file": "src/querystring/js/querystring-parse.js",
            "line": 29,
            "description": "The QueryString module adds support for serializing JavaScript objects into\nquery strings and parsing JavaScript objects from query strings format.",
            "static": 1
        },
        "Queue": {
            "name": "Queue",
            "shortname": "Queue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "yui",
            "namespace": "",
            "file": "src/yui/js/queue-base.js",
            "line": 9,
            "description": "A simple FIFO queue.  Items are added to the Queue with add(1..n items) and\nremoved using next().",
            "submodule": "yui-base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "item",
                    "description": "0..n items to seed the queue.",
                    "type": "MIXED",
                    "multiple": true
                }
            ]
        },
        "Slider": {
            "name": "Slider",
            "shortname": "Slider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "slider",
            "submodule": "range-slider",
            "namespace": "",
            "file": "src/slider/js/range-slider.js",
            "line": 10,
            "description": "Create a slider to represent an integer value between a given minimum and\nmaximum.  Sliders may be aligned vertically or horizontally, based on the\n<code>axis</code> configuration.",
            "is_constructor": 1,
            "extends": "SliderBase",
            "uses": [
                "SliderValueRange",
                "ClickableRail"
            ],
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object",
                    "type": "Object"
                }
            ]
        },
        "Record": {
            "name": "Record",
            "shortname": "Record",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "queue-promote",
            "namespace": "",
            "file": "src/recordset/js/record.js",
            "line": 1,
            "description": "Provides a wrapper around a standard javascript object. Can be inserted into a Recordset instance.",
            "submodule": "recordset-base"
        },
        "Recordset": {
            "name": "Recordset",
            "shortname": "Recordset",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "recordset",
            "submodule": "recordset-base",
            "namespace": "",
            "file": "src/recordset/js/recordset-base.js",
            "line": 13,
            "description": "The Recordset utility provides a standard way for dealing with\na collection of similar objects.\n\nProvides the base Recordset implementation, which can be extended to add\nadditional functionality, such as custom indexing. sorting, and filtering.",
            "extends": "Base",
            "uses": [
                "ArrayList"
            ],
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object with initial attribute values",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "RecordsetFilter": {
            "name": "RecordsetFilter",
            "shortname": "RecordsetFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "recordset",
            "submodule": "recordset-filter",
            "namespace": "",
            "file": "src/recordset/js/recordset-filter.js",
            "line": 13,
            "description": "Plugin that provides the ability to filter through a recordset.\nUses the filter methods available on Y.Array (see arrayextras submodule) to filter the recordset."
        },
        "RecordsetIndexer": {
            "name": "RecordsetIndexer",
            "shortname": "RecordsetIndexer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "recordset",
            "submodule": "recordset-indexer",
            "namespace": "",
            "file": "src/recordset/js/recordset-indexer.js",
            "line": 6,
            "description": "Plugin that provides the ability to store multiple custom hash tables referencing records in the recordset.\nThis utility does not support any collision handling. New hash table entries with a used key overwrite older ones."
        },
        "RecordsetSort": {
            "name": "RecordsetSort",
            "shortname": "RecordsetSort",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "recordset",
            "submodule": "recordset-sort",
            "namespace": "",
            "file": "src/recordset/js/recordset-sort.js",
            "line": 10,
            "description": "Plugin that adds default and custom sorting functionality to the Recordset utility"
        },
        "Resize": {
            "name": "Resize",
            "shortname": "Resize",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "resize",
            "namespace": "",
            "file": "src/resize/js/resize-base.js",
            "line": 129,
            "description": "A base class for Resize, providing:\n\n   * Basic Lifecycle (initializer, renderUI, bindUI, syncUI, destructor)\n   * Applies drag handles to an element to make it resizable\n   * Here is the list of valid resize handles:\n       `[ 't', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl' ]`. You can\n       read this list as top, top-right, right, bottom-right, bottom,\n       bottom-left, left, top-left.\n   * The drag handles are inserted into the element and positioned\n       absolute. Some elements, such as a textarea or image, don't support\n       children. To overcome that, set wrap:true in your config and the\n       element willbe wrapped for you automatically.\n\nQuick Example:\n\n    var instance = new Y.Resize({\n        node: '#resize1',\n        preserveRatio: true,\n        wrap: true,\n        maxHeight: 170,\n        maxWidth: 400,\n        handles: 't, tr, r, br, b, bl, l, tl'\n    });\n\nCheck the list of <a href=\"Resize.html#attrs\">Configuration Attributes</a> available for\nResize.",
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties.",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "extends": "Base"
        },
        "Plugin.ResizeConstrained": {
            "name": "Plugin.ResizeConstrained",
            "shortname": "Plugin.ResizeConstrained",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "resize",
            "submodule": "resize-contrain",
            "namespace": "Plugin",
            "file": "src/resize/js/resize-constrain.js",
            "line": 43,
            "description": "A Resize plugin that will attempt to constrain the resize node to the boundaries."
        },
        "Plugin.Resize": {
            "name": "Plugin.Resize",
            "shortname": "Plugin.Resize",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "resize",
            "submodule": "resize-plugin",
            "namespace": "",
            "file": "src/resize/js/resize-plugin.js",
            "line": 1,
            "description": "The Resize Plugin allows you to make a Node or a Widget resizable. It supports all the functionality of\nthe standalone Resize utility. Additionally, resizing a widget updates the widget's height,width and x,y\nattributes, if they exist.\n\n\n       var overlay = new Y.Overlay({\n          width: \"200px\",\n          srcNode: \"#overlay\",\n          visible: false,\n          align: {node:\".example\", points:[\"tc\", \"bc\"]}\n       });\n       overlay.plug(Y.Plugin.Resize);",
            "extends": "Resize"
        },
        "Plugin.ResizeProxy": {
            "name": "Plugin.ResizeProxy",
            "shortname": "Plugin.ResizeProxy",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "resize",
            "namespace": "Plugin",
            "file": "src/resize/js/resize-proxy.js",
            "line": 17,
            "description": "Adds a `proxyNode` attribute and resizes it instead of the actual node. __very similar to DDProxy__\n\n    var resize = new Y.Resize({\n        //Selector of the node to resize\n        node: '#demo'\n    });\n    resize.plug(Y.Plugin.ResizeProxy);",
            "submodule": "resize-proxy",
            "is_constructor": 1,
            "extends": "Plugin.Base"
        },
        "Router": {
            "name": "Router",
            "shortname": "Router",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "App.Base"
            ],
            "module": "app",
            "submodule": "router",
            "namespace": "",
            "file": "src/app/js/router.js",
            "line": 38,
            "description": "Provides URL-based routing using HTML5 `pushState()` or the location hash.\n\nThis makes it easy to wire up route handlers for different application states\nwhile providing full back/forward navigation support and bookmarkable, shareable\nURLs.",
            "params": [
                {
                    "name": "config",
                    "description": "Config properties.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "html5",
                            "description": "Overrides the default capability detection\n        and forces this router to use (`true`) or not use (`false`) HTML5\n        history.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "root",
                            "description": "Root path from which all routes should be\n        evaluated.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "''"
                        },
                        {
                            "name": "routes",
                            "description": "Array of route definition objects.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": "["
                        }
                    ]
                }
            ],
            "is_constructor": 1,
            "extends": "Base",
            "since": "3.4.0"
        },
        "Controller": {
            "name": "Controller",
            "shortname": "Controller",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "app",
            "submodule": "router",
            "namespace": "",
            "file": "src/app/js/router.js",
            "line": 1404,
            "description": "The `Controller` class was deprecated in YUI 3.5.0 and is now an alias for the\n`Router` class. Use that class instead. This alias will be removed in a future\nversion of YUI.",
            "is_constructor": 1,
            "extends": "Base",
            "deprecated": true,
            "deprecationMessage": "Use `Router` instead.",
            "see": [
                "Router"
            ]
        },
        "ScrollView": {
            "name": "ScrollView",
            "shortname": "ScrollView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrollview",
            "submodule": "scrollview-base",
            "namespace": "",
            "file": "src/scrollview/js/scrollview-base.js",
            "line": 53,
            "description": "ScrollView provides a scrollable widget, supporting flick gestures,\nacross both touch and mouse based devices.",
            "params": [
                {
                    "name": "config",
                    "description": "Object literal with initial attribute values",
                    "type": "Object"
                }
            ],
            "extends": "Widget",
            "is_constructor": 1
        },
        "Plugin.ScrollViewList": {
            "name": "Plugin.ScrollViewList",
            "shortname": "Plugin.ScrollViewList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrollview-list",
            "namespace": "Plugin",
            "file": "src/scrollview/js/list-plugin.js",
            "line": 15,
            "description": "ScrollView plugin that adds class names to immediate descendant \"<li>\" to \nallow for easier styling through CSS",
            "extends": "Plugin.Base",
            "is_constructor": 1
        },
        "Plugin.ScrollViewPaginator": {
            "name": "Plugin.ScrollViewPaginator",
            "shortname": "Plugin.ScrollViewPaginator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrollview-paginator",
            "namespace": "Plugin",
            "file": "src/scrollview/js/paginator-plugin.js",
            "line": 25,
            "description": "Scrollview plugin that adds support for paging",
            "extends": "Plugin.Base",
            "is_constructor": 1
        },
        "Plugin.ScrollViewScrollbars": {
            "name": "Plugin.ScrollViewScrollbars",
            "shortname": "Plugin.ScrollViewScrollbars",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "scrollview",
            "submodule": "scrollview-scrollbars",
            "namespace": "Plugin",
            "file": "src/scrollview/js/scrollbars-plugin.js",
            "line": 47,
            "description": "ScrollView plugin that adds scroll indicators to ScrollView instances",
            "extends": "Plugin.Base",
            "is_constructor": 1
        },
        "Selector": {
            "name": "Selector",
            "shortname": "Selector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "yui",
            "submodule": "yui-log",
            "namespace": "",
            "file": "src/simpleyui/js/concat.js",
            "line": 8942,
            "description": "Provides support for using CSS selectors to query the DOM",
            "static": 1
        },
        "Plugin.Shim": {
            "name": "Plugin.Shim",
            "shortname": "Plugin.Shim",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "shim-plugin",
            "namespace": "",
            "file": "src/node/js/shim-plugin.js",
            "line": 7,
            "description": "Node plugin which can be used to add shim support.",
            "params": [
                {
                    "name": "User",
                    "description": "configuration object",
                    "type": "Object"
                }
            ]
        },
        "Lang": {
            "name": "Lang",
            "shortname": "Lang",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "yui",
            "submodule": "yui-base",
            "namespace": "",
            "file": "src/yui/js/yui-lang.js",
            "line": 9,
            "description": "Provides core language utilites and extensions used throughout YUI.",
            "static": 1
        },
        "Object": {
            "name": "Object",
            "shortname": "Object",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "yui",
            "submodule": "yui-base",
            "namespace": "",
            "file": "src/yui/js/yui-object.js",
            "line": 9,
            "description": "Adds utilities to the YUI instance for working with objects."
        },
        "UA": {
            "name": "UA",
            "shortname": "UA",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "yui",
            "submodule": "yui-base",
            "namespace": "",
            "file": "src/yui/js/yui-ua.js",
            "line": 9,
            "description": "YUI user agent detection.\nDo not fork for a browser if it can be avoided.  Use feature detection when\nyou can.  Use the user agent as a last resort.  For all fields listed\nas @type float, UA stores a version number for the browser engine,\n0 otherwise.  This value may or may not map to the version number of\nthe browser using the engine.  The value is presented as a float so\nthat it can easily be used for boolean evaluation as well as for\nlooking for a particular range of versions.  Because of this,\nsome of the granularity of the version info may be lost.  The fields that\nare @type string default to null.  The API docs list the values that\nthese fields can have.",
            "static": 1
        },
        "Transition": {
            "name": "Transition",
            "shortname": "Transition",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "transition",
            "namespace": "",
            "file": "src/transition/js/transition-native.js",
            "line": 34,
            "description": "A class for constructing transition instances.\nAdds the \"transition\" method to Node.",
            "is_constructor": 1
        },
        "SliderBase": {
            "name": "SliderBase",
            "shortname": "SliderBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "slider",
            "submodule": "slider-base",
            "namespace": "",
            "file": "src/slider/js/slider-base.js",
            "line": 11,
            "description": "Create a slider to represent an input control capable of representing a\nseries of intermediate states based on the position of the slider's thumb.\nThese states are typically aligned to a value algorithm whereby the thumb\nposition corresponds to a given value. Sliders may be oriented vertically or\nhorizontally, based on the <code>axis</code> configuration.",
            "extends": "Widget",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "SliderValueRange": {
            "name": "SliderValueRange",
            "shortname": "SliderValueRange",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Slider"
            ],
            "module": "slider",
            "submodule": "slider-value-range",
            "namespace": "",
            "file": "src/slider/js/value-range.js",
            "line": 19,
            "description": "One class of value algorithm that can be built onto SliderBase.  By default,\nvalues range between 0 and 100, but you can configure these on the\nbuilt Slider class by setting the <code>min</code> and <code>max</code>\nconfigurations.  Set the initial value (will cause the thumb to move to the\nappropriate location on the rail) in configuration as well if appropriate."
        },
        "Sortable": {
            "name": "Sortable",
            "shortname": "Sortable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "sortable",
            "namespace": "",
            "file": "src/sortable/js/sortable.js",
            "line": 6,
            "description": "The class allows you to create a Drag & Drop reordered list.",
            "extends": "Base",
            "is_constructor": 1
        },
        "Plugin.SortScroll": {
            "name": "Plugin.SortScroll",
            "shortname": "Plugin.SortScroll",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "sortable",
            "submodule": "sortable-scroll",
            "namespace": "Plugin",
            "file": "src/sortable/js/sortable-scroll.js",
            "line": 7,
            "description": "Plugin for sortable to handle scrolling lists.",
            "extends": "Base",
            "is_constructor": 1
        },
        "StyleSheet": {
            "name": "StyleSheet",
            "shortname": "StyleSheet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "stylesheet",
            "namespace": "",
            "file": "src/stylesheet/js/stylesheet.js",
            "line": 69,
            "description": "Create an instance of StyleSheet to encapsulate a css stylesheet.\nThe constructor can be called using function or constructor syntax.\n<pre><code>var sheet = Y.StyleSheet(..);</pre></code>\nor\n<pre><code>var sheet = new Y.StyleSheet(..);</pre></code>\n\nThe first parameter passed can be any of the following things:\n<ul>\n  <li>The desired string name to register a new empty sheet</li>\n  <li>The string name of an existing StyleSheet instance</li>\n  <li>The unique guid generated for an existing StyleSheet instance</li>\n  <li>The id of an existing <code>&lt;link&gt;</code> or <code>&lt;style&gt;</code> node</li>\n  <li>The node reference for an existing <code>&lt;link&gt;</code> or <code>&lt;style&gt;</code> node</li>\n  <li>The Y.Node instance wrapping an existing <code>&lt;link&gt;</code> or <code>&lt;style&gt;</code> node</li>\n  <li>A chunk of css text to create a new stylesheet from</li>\n</ul>\n\n<p>If a string is passed, StyleSheet will first look in its static name\nregistry for an existing sheet, then in the DOM for an element with that id.\nIf neither are found and the string contains the { character, it will be\nused as a the initial cssText for a new StyleSheet.  Otherwise, a new empty\nStyleSheet is created, assigned the string value as a name, and registered\nstatically by that name.</p>\n\n<p>The optional second parameter is a string name to register the sheet as.\nThis param is largely useful when providing a node id/ref or chunk of css\ntext to create a populated instance.</p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "seed",
                    "description": "a style or link node, its id, or a\n             name or guid of a StyleSheet, or a string of css text",
                    "type": "String|HTMLElement|Node"
                },
                {
                    "name": "name",
                    "description": "(optional) name to register instance for future static\n             access",
                    "type": "String"
                }
            ]
        },
        "YUI~substitute": {
            "name": "YUI~substitute",
            "shortname": "YUI~substitute",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "substitute",
            "namespace": "",
            "file": "src/substitute/js/substitute.js",
            "line": 11,
            "description": "The following methods are added to the YUI instance"
        },
        "SWF": {
            "name": "SWF",
            "shortname": "SWF",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "swf",
            "namespace": "",
            "file": "src/swf/js/swf.js",
            "line": 29,
            "description": "Creates the SWF instance and keeps the configuration data",
            "uses": [
                "Y.Event.Target"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "The id of the element, or the element itself that the SWF will be inserted into.\n       The width and height of the SWF will be set to the width and height of this container element.",
                    "type": "String|HTMLElement"
                },
                {
                    "name": "swfURL",
                    "description": "The URL of the SWF to be embedded into the page.",
                    "type": "String"
                },
                {
                    "name": "p_oAttributes",
                    "description": "(optional) Configuration parameters for the Flash application and values for Flashvars\n       to be passed to the SWF. The p_oAttributes object allows the following additional properties:\n       <dl>\n         <dt>version : String</dt>\n         <dd>The minimum version of Flash required on the user's machine.</dd>\n         <dt>fixedAttributes : Object</dt>\n         <dd>An object literal containing one or more of the following String keys and their values: <code>align,\n             allowFullScreen, allowNetworking, allowScriptAccess, base, bgcolor, menu, name, quality, salign, scale,\n             tabindex, wmode.</code> event from the thumb</dd>\n       </dl>",
                    "type": "Object"
                }
            ]
        },
        "SWFDetect": {
            "name": "SWFDetect",
            "shortname": "SWFDetect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "swfdetect",
            "namespace": "",
            "file": "src/swfdetect/js/swfdetect.js",
            "line": 63,
            "description": "month range of dates, rendered as a grid with date and\nweekday labels.",
            "is_constructor": 1
        },
        "TabView": {
            "name": "TabView",
            "shortname": "TabView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "tabview",
            "namespace": "",
            "file": "src/tabview/js/tabview.js",
            "line": 11,
            "description": "Provides a tabbed widget interface",
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying tabview configuration properties.",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "extends": "Widget",
            "uses": [
                "WidgetParent"
            ]
        },
        "Tab": {
            "name": "Tab",
            "shortname": "Tab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "swfdetect",
            "namespace": "",
            "file": "src/tabview/js/tab.js",
            "line": 4,
            "description": "Provides Tab instances for use with TabView",
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying tabview configuration properties.",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "extends": "Widget",
            "uses": [
                "WidgetChild"
            ]
        },
        "Template": {
            "name": "Template",
            "shortname": "Template",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "template",
            "submodule": "template-base",
            "namespace": "",
            "file": "src/template/js/template-base.js",
            "line": 18,
            "description": "Provides a generic API for using template engines such as Handlebars and\n`Y.Template.Micro`.\n\n### Examples\n\nUsing with `Y.Template.Micro` (the default template engine):\n\n    YUI().use('template', function (Y) {\n        var micro = new Y.Template(),\n            html  = micro.render('<%= data.message %>', {message: 'hello!'});\n\n        // ...\n    });\n\nUsing with Handlebars:\n\n    YUI().use('template-base', 'handlebars', function (Y) {\n        var handlebars = new Y.Template(Y.Handlebars),\n            html       = handlebars.render('{{message}}', {message: 'hello!'});\n\n        // ...\n    });",
            "params": [
                {
                    "name": "engine",
                    "description": "Template engine to use, such as\n    `Y.Template.Micro` or `Y.Handlebars`. Defaults to `Y.Template.Micro` if not\n    specified.",
                    "type": "Mixed",
                    "optional": true,
                    "optdefault": "Y.Template.Micro"
                },
                {
                    "name": "defaults",
                    "description": "Default options to use when instance methods are\n    invoked.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1,
            "since": "3.8.0"
        },
        "Template.Micro": {
            "name": "Template.Micro",
            "shortname": "Template.Micro",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "template",
            "submodule": "template-micro",
            "namespace": "",
            "file": "src/template/js/template-micro.js",
            "line": 10,
            "description": "Fast, simple string-based micro-templating engine similar to ERB or Underscore\ntemplates.",
            "static": 1,
            "since": "3.8.0"
        },
        "Test.EventTarget": {
            "name": "Test.EventTarget",
            "shortname": "Test.EventTarget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/EventTarget.js",
            "line": 2,
            "description": "Simple custom event implementation."
        },
        "Test.TestSuite": {
            "name": "Test.TestSuite",
            "shortname": "Test.TestSuite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/TestSuite.js",
            "line": 3,
            "description": "A test suite that can contain a collection of TestCase and TestSuite objects.",
            "params": [
                {
                    "name": "data",
                    "description": "The name of the test suite or an object containing\n     a name property as well as setUp and tearDown methods.",
                    "type": "String||Object"
                }
            ]
        },
        "Test.TestCase": {
            "name": "Test.TestCase",
            "shortname": "Test.TestCase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/TestCase.js",
            "line": 1,
            "description": "Test case containing various tests to run.",
            "params": [
                {
                    "name": "template",
                    "description": "An object containing any number of test methods, other methods,\n                an optional name, and anything else the test case needs."
                }
            ]
        },
        "Test.TestFormat": {
            "name": "Test.TestFormat",
            "shortname": "Test.TestFormat",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/TestFormat.js",
            "line": 1,
            "description": "An object object containing test result formatting methods."
        },
        "Test.Reporter": {
            "name": "Test.Reporter",
            "shortname": "Test.Reporter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/Reporter.js",
            "line": 2,
            "description": "An object capable of sending test results to a server.",
            "params": [
                {
                    "name": "url",
                    "description": "The URL to submit the results to.",
                    "type": "String"
                },
                {
                    "name": "format",
                    "description": "(Optiona) A function that outputs the results in a specific format.\n     Default is YUITest.TestFormat.XML.",
                    "type": "Function"
                }
            ],
            "is_constructor": 1
        },
        "Test.TestRunner": {
            "name": "Test.TestRunner",
            "shortname": "Test.TestRunner",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/TestRunner.js",
            "line": 2,
            "description": "Runs test suites and test cases, providing events to allowing for the\ninterpretation of test results."
        },
        "Test.TestNode": {
            "name": "Test.TestNode",
            "shortname": "TestNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/TestRunner.js",
            "line": 34,
            "description": "A node in the test tree structure. May represent a TestSuite, TestCase, or\ntest function.",
            "params": [
                {
                    "name": "testObject",
                    "description": "A TestSuite, TestCase, or the name of a test function.",
                    "type": "Variant"
                }
            ]
        },
        "Test.Runner": {
            "name": "Test.Runner",
            "shortname": "Test.Runner",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/TestRunner.js",
            "line": 120,
            "description": "Runs test suites and test cases, providing events to allowing for the\ninterpretation of test results."
        },
        "Test.ArrayAssert": {
            "name": "Test.ArrayAssert",
            "shortname": "Test.ArrayAssert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/ArrayAssert.js",
            "line": 2,
            "description": "The ArrayAssert object provides functions to test JavaScript array objects\nfor a variety of cases."
        },
        "Test.Assert": {
            "name": "Test.Assert",
            "shortname": "Test.Assert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/Assert.js",
            "line": 2,
            "description": "The Assert object provides functions to test JavaScript values against\nknown and expected results. Whenever a comparison (assertion) fails,\nan error is thrown."
        },
        "Test.AssertionError": {
            "name": "Test.AssertionError",
            "shortname": "Test.AssertionError",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/AssertionError.js",
            "line": 1,
            "description": "Error is thrown whenever an assertion fails. It provides methods\nto more easily get at error information and also provides a base class\nfrom which more specific assertion errors can be derived.",
            "params": [
                {
                    "name": "message",
                    "description": "The message to display when the error occurs.",
                    "type": "String"
                }
            ]
        },
        "Test.Test.CoverageFormat": {
            "name": "Test.Test.CoverageFormat",
            "shortname": "Test.CoverageFormat",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "build-npm/test/test.js",
            "line": 2794,
            "description": "An object object containing coverage result formatting methods."
        },
        "Test.Mock.Test.DateAssert": {
            "name": "Test.Mock.Test.DateAssert",
            "shortname": "Test.DateAssert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test.Mock",
            "file": "build-npm/test/test.js",
            "line": 2839,
            "description": "The DateAssert object provides functions to test JavaScript Date objects\nfor a variety of cases."
        },
        "Test.Value": {
            "name": "Test.Value",
            "shortname": "Test.Mock.Value",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "build-npm/test/test.js",
            "line": 3086,
            "description": "Creates a new value matcher.",
            "params": [
                {
                    "name": "method",
                    "description": "The function to call on the value.",
                    "type": "Function"
                },
                {
                    "name": "originalArgs",
                    "description": "(Optional) Array of arguments to pass to the method.",
                    "type": "Array"
                },
                {
                    "name": "message",
                    "description": "(Optional) Message to display in case of failure.",
                    "type": "String"
                }
            ]
        },
        "Test.ObjectAssert": {
            "name": "Test.ObjectAssert",
            "shortname": "Test.ObjectAssert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/ObjectAssert.js",
            "line": 2,
            "description": "The ObjectAssert object provides functions to test JavaScript objects\nfor a variety of cases."
        },
        "Test.Results": {
            "name": "Test.Results",
            "shortname": "Test.Results",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/Results.js",
            "line": 1,
            "description": "Convenience type for storing and aggregating\ntest result information.",
            "access": "private",
            "tagname": ""
        },
        "Test.ShouldError": {
            "name": "Test.ShouldError",
            "shortname": "Test.ShouldError",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/ShouldError.js",
            "line": 1,
            "description": "ShouldError is subclass of Error that is thrown whenever\na test is expected to throw an error but doesn't.",
            "params": [
                {
                    "name": "message",
                    "description": "The message to display when the error occurs.",
                    "type": "String"
                }
            ],
            "extends": "AssertionError"
        },
        "Test.ShouldFail": {
            "name": "Test.ShouldFail",
            "shortname": "Test.ShouldFail",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/ShouldFail.js",
            "line": 1,
            "description": "ShouldFail is subclass of AssertionError that is thrown whenever\na test was expected to fail but did not.",
            "params": [
                {
                    "name": "message",
                    "description": "The message to display when the error occurs.",
                    "type": "String"
                }
            ],
            "extends": "YUITest.AssertionError"
        },
        "Test.UnexpectedError": {
            "name": "Test.UnexpectedError",
            "shortname": "Test.UnexpectedError",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/UnexpectedError.js",
            "line": 1,
            "description": "UnexpectedError is subclass of AssertionError that is thrown whenever\nan error occurs within the course of a test and the test was not expected\nto throw an error.",
            "params": [
                {
                    "name": "cause",
                    "description": "The unexpected error that caused this error to be \n                     thrown.",
                    "type": "Error"
                }
            ],
            "extends": "YUITest.AssertionError"
        },
        "Test.UnexpectedValue": {
            "name": "Test.UnexpectedValue",
            "shortname": "Test.UnexpectedValue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/UnexpectedValue.js",
            "line": 1,
            "description": "UnexpectedValue is subclass of Error that is thrown whenever\na value was unexpected in its scope. This typically means that a test\nwas performed to determine that a value was *not* equal to a certain\nvalue.",
            "params": [
                {
                    "name": "message",
                    "description": "The message to display when the error occurs.",
                    "type": "String"
                },
                {
                    "name": "unexpected",
                    "description": "The unexpected value.",
                    "type": "Object"
                }
            ],
            "extends": "AssertionError"
        },
        "Test.Wait": {
            "name": "Test.Wait",
            "shortname": "Test.Wait",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/Wait.js",
            "line": 2,
            "description": "Represents a stoppage in test execution to wait for an amount of time before\ncontinuing.",
            "params": [
                {
                    "name": "segment",
                    "description": "A function to run when the wait is over.",
                    "type": "Function"
                },
                {
                    "name": "delay",
                    "description": "The number of milliseconds to wait before running the code.",
                    "type": "Int"
                }
            ]
        },
        "Test.Console": {
            "name": "Test.Console",
            "shortname": "Test.Console",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test-console",
            "namespace": "Test",
            "file": "src/test-console/js/test-console.js",
            "line": 1,
            "description": "Provides a specialized log console widget that's pre-configured to display YUI\nTest output with no extra configuration.",
            "example": [
                "\n\n    <div id=\"log\" class=\"yui3-skin-sam\"></div>\n\n    <script>\n    YUI().use('test-console', function (Y) {\n        // ... set up your test cases here ...\n\n        // Render the console inside the #log div, then run the tests.\n        new Y.Test.Console().render('#log');\n        Y.Test.Runner.run();\n    });\n    </script>"
            ]
        },
        "Text.AccentFold": {
            "name": "Text.AccentFold",
            "shortname": "Text.AccentFold",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "text",
            "submodule": "text-accentfold",
            "namespace": "",
            "file": "src/text/js/text-accentfold.js",
            "line": 16,
            "description": "<p>\nProvides a basic accent folding implementation that converts common accented\nletters (like \"á\") to their non-accented forms (like \"a\").\n</p>\n\n<p>\nThis implementation is not comprehensive, and should only be used as a last\nresort when accent folding can't be done on the server. A comprehensive\naccent folding implementation would require much more character data to be\nsent to the browser, resulting in a significant performance penalty. This\nimplementation strives for a compromise between usefulness and performance.\n</p>\n\n<p>\nAccent folding is a destructive operation that can't be reversed, and may\nchange or destroy the actual meaning of the text depending on the language.\nIt should not be used on strings that will later be displayed to a user,\nunless this is done with the understanding that linguistic meaning may be\nlost and that you may in fact confuse or insult the user by doing so.\n</p>\n\n<p>\nWhen used for matching, accent folding is likely to produce erroneous matches\nfor languages in which characters with diacritics are considered different\nfrom their base characters, or where correct folding would map to other\ncharacter sequences than just stripped characters. For example, in German\n\"ü\" is a character that's clearly different from \"u\" and should match \"ue\"\ninstead. The word \"betrügen\" means \"to defraud\", while \"betrugen\" is the past\ntense of \"to behave\". The name \"Müller\" is expected to match \"Mueller\", but\nnot \"Muller\". On the other hand, accent folding falls short for languages\nwhere different base characters are expected to match. In Japanese, for\nexample, hiragana and katakana characters with the same pronunciation (\"あ\"\nand \"ア\") are commonly treated as equivalent for lookups, but accent folding\ntreats them as different.\n</p>",
            "static": 1
        },
        "Text.WordBreak": {
            "name": "Text.WordBreak",
            "shortname": "Text.WordBreak",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "text",
            "submodule": "text-wordbreak",
            "namespace": "",
            "file": "src/text/js/text-wordbreak.js",
            "line": 9,
            "description": "<p>\nProvides utility methods for splitting strings on word breaks and determining\nwhether a character index represents a word boundary, using the generic word\nbreaking algorithm defined in the Unicode Text Segmentation guidelines\n(<a href=\"http://unicode.org/reports/tr29/#Word_Boundaries\">Unicode Standard\nAnnex #29</a>).\n</p>\n\n<p>\nThis algorithm provides a reasonable default for many languages. However, it\ndoes not cover language or context specific requirements, and it does not\nprovide meaningful results at all for languages that don't use spaces between\nwords, such as Chinese, Japanese, Thai, Lao, Khmer, and others. Server-based\nword breaking services usually provide significantly better results with\nbetter performance.\n</p>",
            "static": 1
        },
        "Uploader": {
            "name": "Uploader",
            "shortname": "Uploader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "uploader",
            "namespace": "",
            "file": "src/uploader/js/uploader.js",
            "line": 11,
            "description": "`Y.Uploader` serves as an alias for either <a href=\"UploaderFlash.html\">`Y.UploaderFlash`</a>\nor <a href=\"UploaderHTML5.html\">`Y.UploaderHTML5`</a>, depending on the feature set available\nin a specific browser. If neither HTML5 nor Flash transport layers are available, `Y.Uploader.TYPE`\nstatic property is set to `\"none\"`."
        },
        "UploaderFlash": {
            "name": "UploaderFlash",
            "shortname": "UploaderFlash",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "uploader-flash",
            "namespace": "",
            "file": "src/uploader/js/uploader-flash.js",
            "line": 15,
            "description": "This module provides a UI for file selection and multiple file upload capability\nusing Flash as a transport engine.",
            "extends": "Widget",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object.",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "UploaderHTML5": {
            "name": "UploaderHTML5",
            "shortname": "UploaderHTML5",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "uploader-html5",
            "namespace": "",
            "file": "src/uploader/js/uploader-html5.js",
            "line": 14,
            "description": "This module provides a UI for file selection and multiple file upload capability using\nHTML5 XMLHTTPRequest Level 2 as a transport engine.",
            "extends": "Widget",
            "is_constructor": 1
        },
        "Uploader.Queue": {
            "name": "Uploader.Queue",
            "shortname": "Uploader.Queue",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "uploader-queue",
            "namespace": "",
            "file": "src/uploader/js/uploader-queue.js",
            "line": 10,
            "description": "This class manages a queue of files to be uploaded to the server.",
            "extends": "Base",
            "is_constructor": 1
        },
        "View": {
            "name": "View",
            "shortname": "View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "App.Base"
            ],
            "module": "app",
            "submodule": "view",
            "namespace": "",
            "file": "src/app/js/view.js",
            "line": 11,
            "description": "Represents a logical piece of an application's user interface, and provides a\nlightweight, overridable API for rendering content and handling delegated DOM\nevents on a container element.\n\nThe View class imposes little structure and provides only minimal functionality\nof its own: it's basically just an overridable API interface that helps you\nimplement custom views.\n\nAs of YUI 3.5.0, View allows ad-hoc attributes to be specified at instantiation\ntime, so you don't need to subclass `Y.View` to add custom attributes. Just pass\nthem to the constructor:\n\n    var view = new Y.View({foo: 'bar'});\n    view.get('foo'); // => \"bar\"",
            "is_constructor": 1,
            "extends": "Base",
            "since": "3.4.0"
        },
        "View.NodeMap": {
            "name": "View.NodeMap",
            "shortname": "View.NodeMap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "View",
                "View",
                "View",
                "View",
                "View",
                "View",
                "View"
            ],
            "module": "app",
            "submodule": "view-node-map",
            "namespace": "",
            "file": "src/app/js/view-extensions/view-node-map.js",
            "line": 14,
            "description": "View extension that adds a static `getByNode()` method that returns the nearest\nView instance associated with the given Node (similar to Widget's `getByNode()`\nmethod).\n\nNote that it's important to call `destroy()` on a View instance using this\nextension when you plan to stop using it. This ensures that all internal\nreferences to that View are cleared to prevent memory leaks.",
            "since": "3.5.0"
        },
        "Plugin.WidgetAnim": {
            "name": "Plugin.WidgetAnim",
            "shortname": "Plugin.WidgetAnim",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "widget-anim",
            "namespace": "Plugin",
            "file": "src/widget-anim/js/WidgetAnim.js",
            "line": 29,
            "description": "A plugin class which can be used to animate widget visibility changes.",
            "extends": "Plugin.Base"
        },
        "WidgetAutohide": {
            "name": "WidgetAutohide",
            "shortname": "WidgetAutohide",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Panel"
            ],
            "module": "widget-autohide",
            "namespace": "",
            "file": "src/widget-autohide/js/Widget-Autohide.js",
            "line": 27,
            "description": "The WidgetAutohide class provides the hideOn attribute which can\nbe used to hide the widget when certain events occur.",
            "params": [
                {
                    "name": "config",
                    "description": "User configuration object",
                    "type": "Object"
                }
            ]
        },
        "Widget": {
            "name": "Widget",
            "shortname": "Widget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "widget",
            "submodule": "widget-base",
            "namespace": "",
            "file": "src/widget/js/Widget.js",
            "line": 68,
            "description": "A base class for widgets, providing:\n<ul>\n   <li>The render lifecycle method, in addition to the init and destroy \n       lifecycle methods provide by Base</li>\n   <li>Abstract methods to support consistent MVC structure across \n       widgets: renderer, renderUI, bindUI, syncUI</li>\n   <li>Support for common widget attributes, such as boundingBox, contentBox, visible, \n       disabled, focused, strings</li>\n</ul>",
            "params": [
                {
                    "name": "config",
                    "description": "Object literal specifying widget configuration properties.",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "extends": "Base"
        },
        "WidgetButtons": {
            "name": "WidgetButtons",
            "shortname": "WidgetButtons",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Widget",
                "Widget",
                "Widget",
                "Widget",
                "Widget",
                "Widget",
                "Widget",
                "Panel"
            ],
            "module": "widget-buttons",
            "namespace": "",
            "file": "src/widget-buttons/js/widget-buttons.js",
            "line": 29,
            "description": "Provides header/body/footer button support for Widgets that use the\n`WidgetStdMod` extension.\n\nThis Widget extension makes it easy to declaratively configure a widget's\nbuttons. It adds a `buttons` attribute along with button- accessor and mutator\nmethods. All button nodes have the `Y.Plugin.Button` plugin applied.\n\nThis extension also includes `HTML_PARSER` support to seed a widget's `buttons`\nfrom those which already exist in its DOM.",
            "since": "3.4.0"
        },
        "WidgetChild": {
            "name": "WidgetChild",
            "shortname": "WidgetChild",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Tab"
            ],
            "module": "widget-child",
            "namespace": "",
            "file": "src/widget-child/js/Widget-Child.js",
            "line": 9,
            "description": "Widget extension providing functionality enabling a Widget to be a \nchild of another Widget.",
            "params": [
                {
                    "name": "config",
                    "description": "User configuration object.",
                    "type": "Object"
                }
            ]
        },
        "WidgetModality": {
            "name": "WidgetModality",
            "shortname": "WidgetModality",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Panel"
            ],
            "module": "widget-modality",
            "namespace": "",
            "file": "src/widget-modality/js/Widget-Modality.js",
            "line": 48,
            "description": "Widget extension, which can be used to add modality support to the base Widget class,\nthrough the Base.create method.",
            "params": [
                {
                    "name": "config",
                    "description": "User configuration object",
                    "type": "Object"
                }
            ]
        },
        "WidgetParent": {
            "name": "WidgetParent",
            "shortname": "WidgetParent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "TabView"
            ],
            "module": "widget-parent",
            "namespace": "",
            "file": "src/widget-parent/js/Widget-Parent.js",
            "line": 11,
            "description": "Widget extension providing functionality enabling a Widget to be a \nparent of another Widget.\n\n<p>In addition to the set of attributes supported by WidgetParent, the constructor\nconfiguration object can also contain a <code>children</code> which can be used\nto add child widgets to the parent during construction. The <code>children</code>\nproperty is an array of either child widget instances or child widget configuration \nobjects, and is sugar for the <a href=\"#method_add\">add</a> method. See the \n<a href=\"#method_add\">add</a> for details on the structure of the child widget \nconfiguration object.",
            "is_constructor": 1,
            "uses": [
                "ArrayList"
            ],
            "params": [
                {
                    "name": "config",
                    "description": "User configuration object.",
                    "type": "Object"
                }
            ]
        },
        "WidgetPosition": {
            "name": "WidgetPosition",
            "shortname": "WidgetPosition",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "AutoCompleteList",
                "Overlay",
                "Panel"
            ],
            "module": "widget-position",
            "namespace": "",
            "file": "src/widget-position/js/Widget-Position.js",
            "line": 24,
            "description": "Widget extension, which can be used to add positioning support to the base Widget class, \nthrough the <a href=\"Base.html#method_build\">Base.build</a> method.",
            "params": [
                {
                    "name": "config",
                    "description": "User configuration object",
                    "type": "Object"
                }
            ]
        },
        "WidgetPositionAlign": {
            "name": "WidgetPositionAlign",
            "shortname": "WidgetPositionAlign",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "AutoCompleteList",
                "Overlay",
                "Panel"
            ],
            "module": "widget-position-align",
            "namespace": "",
            "file": "src/widget-position-align/js/Widget-PositionAlign.js",
            "line": 24,
            "description": "Widget extension, which can be used to add extended XY positioning support to\nthe base Widget class, through the `Base.create` method.\n\n**Note:** This extension requires that the `WidgetPosition` extension be added\nto the Widget (before `WidgetPositionAlign`, if part of the same extension list\npassed to `Base.build`).",
            "params": [
                {
                    "name": "config",
                    "description": "User configuration object.",
                    "type": "Object"
                }
            ],
            "is_constructor": 1
        },
        "WidgetPositionConstrain": {
            "name": "WidgetPositionConstrain",
            "shortname": "WidgetPositionConstrain",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Overlay",
                "Panel"
            ],
            "module": "widget-position-constrain",
            "namespace": "",
            "file": "src/widget-position-constrain/js/Widget-PositionConstrain.js",
            "line": 30,
            "description": "A widget extension, which can be used to add constrained xy positioning support to the base Widget class,\nthrough the <a href=\"Base.html#method_build\">Base.build</a> method. This extension requires that \nthe WidgetPosition extension be added to the Widget (before WidgetPositionConstrain, if part of the same \nextension list passed to Base.build).",
            "params": [
                {
                    "name": "User",
                    "description": "configuration object",
                    "type": "Object"
                }
            ]
        },
        "WidgetStack": {
            "name": "WidgetStack",
            "shortname": "WidgetStack",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Overlay",
                "Panel"
            ],
            "module": "widget-stack",
            "namespace": "",
            "file": "src/widget-stack/js/Widget-Stack.js",
            "line": 46,
            "description": "Widget extension, which can be used to add stackable (z-index) support to the\nbase Widget class along with a shimming solution, through the\n<a href=\"Base.html#method_build\">Base.build</a> method.",
            "params": [
                {
                    "name": "User",
                    "description": "configuration object",
                    "type": "Object"
                }
            ]
        },
        "WidgetStdMod": {
            "name": "WidgetStdMod",
            "shortname": "WidgetStdMod",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Overlay",
                "Panel"
            ],
            "module": "widget-stdmod",
            "namespace": "",
            "file": "src/widget-stdmod/js/Widget-StdMod.js",
            "line": 49,
            "description": "Widget extension, which can be used to add Standard Module support to the\nbase Widget class, through the <a href=\"Base.html#method_build\">Base.build</a>\nmethod.\n<p>\nThe extension adds header, body and footer sections to the Widget's content box and\nprovides the corresponding methods and attributes to modify the contents of these sections.\n</p>",
            "params": [
                {
                    "name": "The",
                    "description": "user configuration object",
                    "type": "Object"
                }
            ]
        },
        "YQLRequest": {
            "name": "YQLRequest",
            "shortname": "YQLRequest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "yql",
            "namespace": "",
            "file": "src/yql/js/yql.js",
            "line": 5,
            "description": "Utility Class used under the hood my the YQL class",
            "is_constructor": 1,
            "params": [
                {
                    "name": "sql",
                    "description": "The SQL statement to execute",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback to execute after the query (Falls through to JSONP).",
                    "type": "Function/Object"
                },
                {
                    "name": "params",
                    "description": "An object literal of extra parameters to pass along (optional).",
                    "type": "Object"
                },
                {
                    "name": "opts",
                    "description": "An object literal of configuration options (optional): proto (http|https), base (url)",
                    "type": "Object"
                }
            ]
        },
        "YQL": {
            "name": "YQL",
            "shortname": "YQL",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "yql",
            "namespace": "",
            "file": "src/yql/js/yql.js",
            "line": 163,
            "description": "This class adds a sugar class to allow access to YQL (http://developer.yahoo.com/yql/).",
            "is_constructor": 1,
            "params": [
                {
                    "name": "sql",
                    "description": "The SQL statement to execute",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback to execute after the query (optional).",
                    "type": "Function"
                },
                {
                    "name": "params",
                    "description": "An object literal of extra parameters to pass along (optional).",
                    "type": "Object"
                },
                {
                    "name": "opts",
                    "description": "An object literal of configuration options (optional): proto (http|https), base (url)",
                    "type": "Object"
                }
            ]
        },
        "Test.ComparisonFailure": {
            "name": "Test.ComparisonFailure",
            "shortname": "Test.ComparisonFailure",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/ComparisonFailure.js",
            "line": 1,
            "description": "ComparisonFailure is subclass of Error that is thrown whenever\na comparison between two values fails. It provides mechanisms to retrieve\nboth the expected and actual value.",
            "params": [
                {
                    "name": "message",
                    "description": "The message to display when the error occurs.",
                    "type": "String"
                },
                {
                    "name": "expected",
                    "description": "The expected value.",
                    "type": "Object"
                },
                {
                    "name": "actual",
                    "description": "The actual value that caused the assertion to fail.",
                    "type": "Object"
                }
            ],
            "extends": "AssertionError"
        },
        "Test.CoverageFormat": {
            "name": "Test.CoverageFormat",
            "shortname": "Test.CoverageFormat",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test.CoverageFormat",
            "file": "src/test/js/CoverageFormat.js",
            "line": 1,
            "description": "An object object containing coverage result formatting methods."
        },
        "Test.DateAssert": {
            "name": "Test.DateAssert",
            "shortname": "Test.DateAssert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test",
            "file": "src/test/js/DateAssert.js",
            "line": 3,
            "description": "The DateAssert object provides functions to test JavaScript Date objects\nfor a variety of cases."
        },
        "Test.Mock": {
            "name": "Test.Mock",
            "shortname": "Test.Mock",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test.Mock",
            "file": "src/test/js/Mock.js",
            "line": 1,
            "description": "Creates a new mock object."
        },
        "Test.Mock.Value": {
            "name": "Test.Mock.Value",
            "shortname": "Test.Mock.Value",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "test",
            "namespace": "Test.Mock",
            "file": "src/test/js/Mock.js",
            "line": 165,
            "description": "Creates a new value matcher.",
            "params": [
                {
                    "name": "method",
                    "description": "The function to call on the value.",
                    "type": "Function"
                },
                {
                    "name": "originalArgs",
                    "description": "(Optional) Array of arguments to pass to the method.",
                    "type": "Array"
                },
                {
                    "name": "message",
                    "description": "(Optional) Message to display in case of failure.",
                    "type": "String"
                }
            ]
        }
    }    
}